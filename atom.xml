<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OdinSam&#39;s blogs-一个热爱编程性格开朗的Coder</title>
  
  
  <link href="https://www.odinsam.com/atom.xml" rel="self"/>
  
  <link href="https://www.odinsam.com/"/>
  <updated>2022-10-19T14:43:00.124Z</updated>
  <id>https://www.odinsam.com/</id>
  
  <author>
    <name>OdinSam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue2.0进阶 - 10. nextTick与props传递函数</title>
    <link href="https://www.odinsam.com/articles/fc6a.html"/>
    <id>https://www.odinsam.com/articles/fc6a.html</id>
    <published>2022-10-19T14:39:00.000Z</published>
    <updated>2022-10-19T14:43:00.124Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 10 章: nextTick与props传递函数</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="nexttick与props传递函数"><a class="markdownIt-Anchor" href="#nexttick与props传递函数"></a> nextTick与props传递函数</h4><ol><li>this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</li><li>使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</li><li>父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        nextTick与props传递函数</span><br><span class="line">        1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</span><br><span class="line">        2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</span><br><span class="line">        3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;span v-if=&quot;!isEdit&quot;&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span v-else&gt;&lt;input ref=&quot;txtStuName&quot; type=&quot;text&quot; v-model=&quot;stuName&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;editOrOkClick&quot;&gt;&#123;&#123;btnText[isEdit]&#125;&#125;&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            isEdit:false,</span><br><span class="line">            stuName: &#x27;odinsam&#x27;,</span><br><span class="line">            btnText:&#123;true:&#x27;确定&#x27;,false:&#x27;编辑&#x27;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //app组件传递的回调函数</span><br><span class="line">    props:[&#x27;getStuName&#x27;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">        editOrOkClick() &#123;</span><br><span class="line">            if (this.isEdit)</span><br><span class="line">            &#123;</span><br><span class="line">                //子组件调用父组件通过props传递的回调函数向父组件传递数据</span><br><span class="line">                this.getStuName(&#123;stuName:this.stuName&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.isEdit = !this.isEdit;</span><br><span class="line">            // 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点</span><br><span class="line">            this.$nextTick(function () &#123;</span><br><span class="line">                if (this.isEdit) &#123;</span><br><span class="line">                    this.$refs.txtStuName.focus();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;Student :getStuName=&quot;getStuName&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getStuName(param) &#123;</span><br><span class="line">            console.log(param);</span><br><span class="line">            this.stuName = param.stuName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 10 章: nextTick与props传递函数&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
    <category term="nextTick" scheme="https://www.odinsam.com/tags/nextTick/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 09. 消息订阅与发布</title>
    <link href="https://www.odinsam.com/articles/ac9b.html"/>
    <id>https://www.odinsam.com/articles/ac9b.html</id>
    <published>2022-10-19T13:51:00.000Z</published>
    <updated>2022-10-19T14:09:18.490Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 09 章: 消息订阅与发布</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="消息订阅与发布"><a class="markdownIt-Anchor" href="#消息订阅与发布"></a> 消息订阅与发布</h4><ol><li>yarn add pubsub-js 安装消息订阅与发布框架</li><li>订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) =&gt; {}); 消息传递数据可以是字符串、数据、数据或对象</li><li>取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</li><li>组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})</li></ol><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        消息订阅与发布</span><br><span class="line">        1. yarn add pubsub-js 安装消息订阅与发布框架</span><br><span class="line">        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(&#x27;消息名称&#x27;, (消息名称, 消息传递数据) =&gt; &#123;&#125;); 消息传递数据可以是字符串、数据、数据或对象</span><br><span class="line">        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</span><br><span class="line">        4. 组件发布消息 pubsub.publish(&#x27;消息名称&#x27;,消息传递数据&#125;)</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt; &lt;br/&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        this.pubId = pubsub.subscribe(&#x27;subMessage&#x27;, (messasgeName, param) =&gt; &#123;</span><br><span class="line">            console.log(&#x27;messasgeName&#x27;,messasgeName);</span><br><span class="line">            this.stuName = param.stuName</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">        pubsub.unsubscribe(this.pubId)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;publishMessageClick&quot;&gt;发布消息传递数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        publishMessageClick() &#123;</span><br><span class="line">            pubsub.publish(&#x27;subMessage&#x27;,&#123;stuName:this.stuName&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 09 章: 消息订阅与发布&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="消息订阅" scheme="https://www.odinsam.com/tags/%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85/"/>
    
    <category term="消息发布" scheme="https://www.odinsam.com/tags/%E6%B6%88%E6%81%AF%E5%8F%91%E5%B8%83/"/>
    
    <category term="subscribe" scheme="https://www.odinsam.com/tags/subscribe/"/>
    
    <category term="unsubscribe" scheme="https://www.odinsam.com/tags/unsubscribe/"/>
    
    <category term="publish" scheme="https://www.odinsam.com/tags/publish/"/>
    
    <category term="pubsub-js" scheme="https://www.odinsam.com/tags/pubsub-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 08. 全局事件总线</title>
    <link href="https://www.odinsam.com/articles/10d9.html"/>
    <id>https://www.odinsam.com/articles/10d9.html</id>
    <published>2022-10-19T13:41:00.000Z</published>
    <updated>2022-10-19T13:54:08.135Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 08 章: 全局事件总线</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue全局事件总线"><a class="markdownIt-Anchor" href="#vue全局事件总线"></a> vue全局事件总线</h4><ol><li>一种组件间通信的方式，适用于任意组件通信</li><li>在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线</li><li>主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</li><li>通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    全局事件总线:</span></span><br><span class="line"><span class="comment">    1. 一种组件间通信的方式，适用于任意组件通信</span></span><br><span class="line"><span class="comment">    2. 在main.js中通过 beforeCreate()&#123; Vue.prototype.$bus = this; &#125; 安装全局事件总线</span></span><br><span class="line"><span class="comment">    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</span></span><br><span class="line"><span class="comment">    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App),</span><br><span class="line">    <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        Vue.prototype.$bus = <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        </span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        //给student添加自定义事件</span><br><span class="line">        this.$bus.$on(&#x27;customEvent&#x27;, (param) =&gt; &#123;</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">        this.$bus.off(&#x27;customEvent&#x27;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;button @click=&quot;busEventClick&quot;&gt;通过全局事件总线触发事件传递数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam-eventBus&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        busEventClick() &#123;</span><br><span class="line">            console.log(&#x27;function busEventClick&#x27;);</span><br><span class="line">            this.$bus.$emit(&#x27;customEvent&#x27;,&#123;name:this.stuName&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 08 章: 全局事件总线&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="eventbus" scheme="https://www.odinsam.com/tags/eventbus/"/>
    
    <category term="全局事件总线" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 07. vue自定义事件</title>
    <link href="https://www.odinsam.com/articles/e1f2.html"/>
    <id>https://www.odinsam.com/articles/e1f2.html</id>
    <published>2022-10-19T13:14:00.000Z</published>
    <updated>2022-10-19T13:18:48.260Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 07 章: vue自定义事件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue自定义事件"><a class="markdownIt-Anchor" href="#vue自定义事件"></a> vue自定义事件</h4><ol><li><p>可以给组件使用 v-on:自定义事件=“事件处理方法” 或者 @自定义事件=“事件处理方法” 来绑定并处理自定义事件.适用于子组件给父组件传递数据</p></li><li><p>在组件中 使用 this.$emit(‘自定义事件’,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</p></li><li><p>也可以通过 ref=‘refName’ 在mounted中 使用 $on 的方式绑定并处理自定义事件</p></li><li><p>mounted中使用 this.<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>f</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">refs.refName.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit">s</span><span class="mord mathrm">.</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathrm">.</span></span></span></span>on(‘自定义事件’,function(参数){ })的方式绑定并处理</p></li><li><p>ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</p></li><li><p>在绑定的组件可以使用 this.$off() 解绑自定义事件.</p><p>this.$off(‘eventName’)  解绑一个自定义事件</p><p>this.$off([‘eventName1’,‘eventName2’])  解绑多个自定义事件</p><p>this.$off()  解绑所有的自定义事件</p></li><li><p>如果组件被销毁，那么绑定的自定义事件不再有效果。</p></li><li><p>注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</p></li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;sendStuName&quot;&gt;自定义事件-回传学生的名字&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;unbind&quot;&gt;解绑自定义事件&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;destoryStu&quot;&gt;销毁组件&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props:[&#x27;title&#x27;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">        sendStuName() &#123;</span><br><span class="line">            console.log(&#x27;function sendStuName&#x27;);</span><br><span class="line">            //触发自定义事件 customEvent,传参对象</span><br><span class="line">            this.$emit(&#x27;customEvent&#x27;,&#123;name:this.stuName&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        unbind() &#123;</span><br><span class="line">            //解绑一个自定义事件</span><br><span class="line">            this.$off(&#x27;customEvent&#x27;)</span><br><span class="line">            //解绑多个自定义事件</span><br><span class="line">            this.$off([&#x27;customEvent&#x27;])</span><br><span class="line">            // 解绑所有的自定义事件</span><br><span class="line">            this.$off()</span><br><span class="line">        &#125;,</span><br><span class="line">        destoryStu() &#123;</span><br><span class="line">            // 销毁当前组件对象</span><br><span class="line">            this.$destroy();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    unbind: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:300px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        vue自定义事件</span><br><span class="line">        1. 可以给组件使用 v-on:自定义事件=&quot;事件处理方法&quot; 或者 @自定义事件=&quot;事件处理方法&quot; 来绑定并处理自定义事件.适用于子组件给父组件传递数据</span><br><span class="line">        2. 在组件中 使用 this.$emit(&#x27;自定义事件&#x27;,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</span><br><span class="line">        2. 也可以通过 ref=&#x27;refName&#x27; 在mounted中 使用 $on 的方式绑定并处理自定义事件</span><br><span class="line">        3. mounted中使用 this.$refs.refName.$on(&#x27;自定义事件&#x27;,function(参数)&#123; &#125;)的方式绑定并处理</span><br><span class="line">        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</span><br><span class="line">        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. </span><br><span class="line">            this.$off(&#x27;eventName&#x27;)  解绑一个自定义事件</span><br><span class="line">            this.$off([&#x27;eventName1&#x27;,&#x27;eventName2&#x27;])  解绑多个自定义事件</span><br><span class="line">            this.$off()  解绑所有的自定义事件</span><br><span class="line">        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。</span><br><span class="line">        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;span&gt;学生组件的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;!--组件student 绑定自定义事件customEvent 事件处理方法getStuName --&gt;</span><br><span class="line">    &lt;Student v-on:customEvent=&quot;getStuName&quot; title=&quot;v-on方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;Student @customEvent=&quot;getStuName&quot; title=&quot;@ 方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;  title=&quot;ref emit方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 直接处理自定义事件</span><br><span class="line">        getStuName(param) &#123;</span><br><span class="line">            console.log(&#x27;param&#x27;, param);</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        // 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.</span><br><span class="line">        // 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码</span><br><span class="line">        this.$refs.stu.$on(&#x27;customEvent&#x27;,(param)=&gt; &#123;</span><br><span class="line">            console.log(&#x27;this.stu.$on&#x27;, param);</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;)</span><br><span class="line">        // this.$refs.stu.$on(&#x27;customEvent&#x27;,getStuName)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 07 章: vue自定义事件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="mounted" scheme="https://www.odinsam.com/tags/mounted/"/>
    
    <category term="emit" scheme="https://www.odinsam.com/tags/emit/"/>
    
    <category term="on" scheme="https://www.odinsam.com/tags/on/"/>
    
    <category term="off" scheme="https://www.odinsam.com/tags/off/"/>
    
    <category term="refs" scheme="https://www.odinsam.com/tags/refs/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 06. webStorage浏览器的本地存储</title>
    <link href="https://www.odinsam.com/articles/fef3.html"/>
    <id>https://www.odinsam.com/articles/fef3.html</id>
    <published>2022-10-19T07:53:00.000Z</published>
    <updated>2022-10-19T07:58:10.051Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 06 章: webStorage浏览器的本地存储</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="webstorage浏览器的本地存储"><a class="markdownIt-Anchor" href="#webstorage浏览器的本地存储"></a> webStorage浏览器的本地存储</h4><ol><li>浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储</li><li>相关api<br>xxxStorage.setItem(‘key’,‘value’) 存储数据<br>xxxStorage.getItem(‘key’) 读取数据<br>xxxStorage.removeItem(‘key’) 删除某个数据<br>xxxStorage.clear()  清空所有数据</li><li>sessionStorage 存储的内容会随着浏览器的关闭而消失.</li><li>localStorage 存储的内容需要手动调用api清除</li><li>xxxStorage.getItem(‘key’) 如果key不存在，则返回null</li><li>JSON.parse(null) 返回的依然是null</li></ol><figure class="highlight plaintext"><figcaption><span>Student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model.lazy=&quot;addStuName&quot; @keyup.enter=&quot;addStu&quot;&gt;&lt;br/&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;stu in stus&quot; :key=&quot;stu.id&quot;&gt;&#123;&#123;stu.stuName&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;button @click=&quot;changeStuName&quot;&gt;修改第一个学生的姓名&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            addStuName: &#x27;&#x27;,</span><br><span class="line">            //从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据</span><br><span class="line">            stus: JSON.parse(localStorage.getItem(&#x27;stu&#x27;)) || []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addStu() &#123;</span><br><span class="line">            const newStu = &#123; id: this.stus.length, stuName: this.addStuName &#125;;</span><br><span class="line">            this.stus.push(newStu);</span><br><span class="line">            this.addStuName=&#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        //修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）</span><br><span class="line">        changeStuName() &#123;</span><br><span class="line">            this.stus[0].stuName = this.stus[0].stuName+&#x27;change&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">        stus: &#123;</span><br><span class="line">            //放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中</span><br><span class="line">            deep: true,</span><br><span class="line">            handler(value) &#123;</span><br><span class="line">                localStorage.setItem(&#x27;stu&#x27;,JSON.stringify(value))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 06 章: webStorage浏览器的本地存储&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="localStorage" scheme="https://www.odinsam.com/tags/localStorage/"/>
    
    <category term="sessionStorage" scheme="https://www.odinsam.com/tags/sessionStorage/"/>
    
    <category term="本地存储" scheme="https://www.odinsam.com/tags/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    
    <category term="webStorage" scheme="https://www.odinsam.com/tags/webStorage/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 05. vue的style</title>
    <link href="https://www.odinsam.com/articles/4576.html"/>
    <id>https://www.odinsam.com/articles/4576.html</id>
    <published>2022-10-18T12:43:00.000Z</published>
    <updated>2022-10-18T12:45:55.536Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 05 章: vue的style</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue的style"><a class="markdownIt-Anchor" href="#vue的style"></a> vue的style</h4><ol><li>多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式</li><li>可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)</li><li>style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.</li><li>npm view webpack version 可以查看对应版本</li><li>vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本</li><li>安装 npm i less-loader@7</li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span class=&quot;namecls&quot;&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span class=&quot;lessname&quot;&gt;less 样式&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:400px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">    .lessname</span><br><span class="line">    &#123;</span><br><span class="line">        font-size:30px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.namecls</span><br><span class="line">    &#123;</span><br><span class="line">        color:blue;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>school.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;schooldv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;School组件&lt;/h2&gt;</span><br><span class="line">        &lt;span class=&quot;namecls&quot;&gt;姓名：&#123;&#123;schoolName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            schoolName:&#x27;vue学校&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;css&quot;&gt;</span><br><span class="line">.schooldv&#123;</span><br><span class="line">    background-color:cadetblue;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">.namecls</span><br><span class="line">&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 05 章: vue的style&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="style" scheme="https://www.odinsam.com/tags/style/"/>
    
    <category term="less" scheme="https://www.odinsam.com/tags/less/"/>
    
    <category term="scoped" scheme="https://www.odinsam.com/tags/scoped/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 04. plugins插件</title>
    <link href="https://www.odinsam.com/articles/ec79.html"/>
    <id>https://www.odinsam.com/articles/ec79.html</id>
    <published>2022-10-18T12:18:00.000Z</published>
    <updated>2022-10-18T13:06:35.109Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 04 章: plugins插件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="plugins插件"><a class="markdownIt-Anchor" href="#plugins插件"></a> plugins插件</h4><ol><li>包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</li><li>插件可以给vue添加实例方法、实例属性</li><li>使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });</li><li>插件也可以 添加全局过滤器、添加全局指令、添加全局混入</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight js"><figcaption><span>plugins</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    vue插件</span></span><br><span class="line"><span class="comment">    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</span></span><br><span class="line"><span class="comment">    2. 插件可以给vue添加实例方法、实例属性</span></span><br><span class="line"><span class="comment">    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, &#123; value1: &#x27;value1&#x27;, value2: &#x27;value2&#x27; &#125;);</span></span><br><span class="line"><span class="comment">    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">install</span>(<span class="params">Vue, options</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;install 插件&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;options&#x27;</span>, options);</span><br><span class="line">        <span class="comment">//添加实例方法、实例属性</span></span><br><span class="line">        Vue.prototype.pluginMethod = <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;invoke plugins myMethod&#x27;</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;myMethod param value&#x27;</span>, value);</span><br><span class="line">        &#125;;</span><br><span class="line">        Vue.prototype.pluginPrototype = <span class="string">&#x27;odinsam plugins&#x27;</span>;</span><br><span class="line">        <span class="comment">//添加全局过滤器</span></span><br><span class="line">        Vue.filter(<span class="string">&#x27;odinFilter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;odinFilter 被调用&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> value + <span class="string">&#x27;-odinFilter 被调用&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//添加全局指令</span></span><br><span class="line">        Vue.directive(<span class="string">&#x27;big&#x27;</span>, &#123;</span><br><span class="line">            <span class="function"><span class="title">bind</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(</span><br><span class="line">                    <span class="string">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;binding&#x27;</span>, binding);</span><br><span class="line">                ele.innerText = <span class="string">&#x27;v-big指令显示&#x27;</span> + binding.value;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">inserted</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">update</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//添加全局混入</span></span><br><span class="line">        Vue.mixin(&#123;</span><br><span class="line">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">pluginMixinValue</span>: <span class="string">&#x27;plugins mixin data&#x27;</span></span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> plugins <span class="keyword">from</span> <span class="string">&#x27;./plugins&#x27;</span>;</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//使用插件</span></span><br><span class="line">Vue.use(plugins, &#123; <span class="attr">value1</span>: <span class="string">&#x27;value1&#x27;</span>, <span class="attr">value2</span>: <span class="string">&#x27;value2&#x27;</span> &#125;);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span&gt;插件混入+插件过滤器:&#123;&#123;pluginMixinValue | odinFilter&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span&gt;插件v-big指令:&lt;/span&gt;&lt;span v-big=&quot;value&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;invokeMyMethod&quot;&gt;调用插件中的myMethod方法&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName: &#x27;odinsam&#x27;,</span><br><span class="line">            value:&#x27;组件value&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        invokeMyMethod() &#123;</span><br><span class="line">            this.pluginMethod(this.pluginPrototype);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 04 章: plugins插件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="全局指令" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%8C%87%E4%BB%A4/"/>
    
    <category term="directive" scheme="https://www.odinsam.com/tags/directive/"/>
    
    <category term="filter" scheme="https://www.odinsam.com/tags/filter/"/>
    
    <category term="全局过滤器" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
    <category term="mixin" scheme="https://www.odinsam.com/tags/mixin/"/>
    
    <category term="全局混入" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5/"/>
    
    <category term="全局混合" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%90%88/"/>
    
    <category term="插件" scheme="https://www.odinsam.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="plugin" scheme="https://www.odinsam.com/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 03. mixins混入配置项</title>
    <link href="https://www.odinsam.com/articles/6426.html"/>
    <id>https://www.odinsam.com/articles/6426.html</id>
    <published>2022-10-18T10:00:00.000Z</published>
    <updated>2022-10-18T12:47:38.594Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: props配置项</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="mixins混入配置项"><a class="markdownIt-Anchor" href="#mixins混入配置项"></a> mixins混入配置项</h4><ol><li>可以吧多个组件公用的配置提取成一个混入对象</li><li>定义见 mixin.js</li><li>使用分为局部混合和全局混合。</li><li>局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]</li><li>全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合</li><li>当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; mixin, mixinData &#125; <span class="keyword">from</span> <span class="string">&#x27;./mixin&#x27;</span>;</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//全局混入</span></span><br><span class="line">Vue.mixin(&#123; mixin, mixinData &#125;);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>mixin.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin = &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">            alert(<span class="built_in">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&#x27;组件挂载了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixinData = &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">value</span>: <span class="string">&#x27;mixin数据&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>school.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;mixindata与组件data冲突时:&#123;&#123;value&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;学校名：&#123;&#123;schoolName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;showName&quot;&gt;showName&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;mixin,mixinData&#125; from &#x27;../mixin&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            value:&#x27;组件data&#x27;,</span><br><span class="line">            name:&#x27;School组件&#x27;,</span><br><span class="line">            schoolName:&#x27;vue学院&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mixins:[mixin,mixinData]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;showName&quot;&gt;showName&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;mixin&#125; from &#x27;../mixin.js&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            name:&#x27;Student组件&#x27;,</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mixins: [mixin],</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        console.log(&#x27;student自身的mounted&#x27;);</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: props配置项&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="mixin" scheme="https://www.odinsam.com/tags/mixin/"/>
    
    <category term="混入" scheme="https://www.odinsam.com/tags/%E6%B7%B7%E5%85%A5/"/>
    
    <category term="混合" scheme="https://www.odinsam.com/tags/%E6%B7%B7%E5%90%88/"/>
    
    <category term="全局混入" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5/"/>
    
    <category term="全局混合" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 02. props配置项</title>
    <link href="https://www.odinsam.com/articles/40e6.html"/>
    <id>https://www.odinsam.com/articles/40e6.html</id>
    <published>2022-10-18T09:28:00.000Z</published>
    <updated>2022-10-19T14:38:04.227Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: props配置项</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="props配置项"><a class="markdownIt-Anchor" href="#props配置项"></a> props配置项</h4><ol><li>让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;</li><li>如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName</li><li>接收数据</li></ol><figure class="highlight js"><figcaption><span>简单接收</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">props: [<span class="string">&#x27;stuName&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>接收的同时限制数据类型</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    <span class="attr">stuName</span>: <span class="built_in">String</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">Number</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>接收的同时 限制数据类型、限制必要性、指定默认值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    <span class="attr">stuName</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">age</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">className</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">        <span class="attr">default</span>:<span class="string">&quot;1班&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        props配置项</span><br><span class="line">        1. 让组件接收外部传过来的数据 &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        2. 接收数据</span><br><span class="line">            简单接收 props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">            接收的同时限制数据类型</span><br><span class="line">            props: &#123;</span><br><span class="line">                stuName: String,</span><br><span class="line">                age: Number,</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            接收的同时 限制数据类型、限制必要性、指定默认值</span><br><span class="line">            props: &#123;</span><br><span class="line">                stuName: &#123;</span><br><span class="line">                    type: String,</span><br><span class="line">                    required:true,</span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line">                    type: Number,</span><br><span class="line">                    required:true,</span><br><span class="line">                &#125;,</span><br><span class="line">                className: &#123;</span><br><span class="line">                    type: String,</span><br><span class="line">                    default:&quot;1班&quot;,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;span&gt;年龄：&#123;&#123;myAge&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;span&gt;班级：&#123;&#123;className&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;button @click=&quot;changeAge&quot;&gt;修改姓名&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            myAge:this.age</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        changeAge() &#123;</span><br><span class="line">            this.myAge++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 简单接收</span><br><span class="line">    // props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">    // 接收的同时限制数据类型</span><br><span class="line">    /*</span><br><span class="line">    props: &#123;</span><br><span class="line">        stuName: String,</span><br><span class="line">        age: Number,</span><br><span class="line">    &#125;</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    props: &#123;</span><br><span class="line">        stuName: &#123;</span><br><span class="line">            type: String,</span><br><span class="line">            required:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        age: &#123;</span><br><span class="line">            type: Number,</span><br><span class="line">            required:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        className: &#123;</span><br><span class="line">            type: String,</span><br><span class="line">            default:&quot;1班&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: props配置项&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶学习</title>
    <link href="https://www.odinsam.com/articles/e255.html"/>
    <id>https://www.odinsam.com/articles/e255.html</id>
    <published>2022-10-18T08:57:00.000Z</published>
    <updated>2022-10-19T14:43:40.002Z</updated>
    
    <content type="html"><![CDATA[<p>Vue2.0进阶学习目录. <a href="da3d.html">vue2.0 基础学习目录</a></p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><h4 id="01-ref属性"><a class="markdownIt-Anchor" href="#01-ref属性"></a> <a href="821d.html">[01] ref属性</a></h4><h4 id="02-props配置项"><a class="markdownIt-Anchor" href="#02-props配置项"></a> <a href="40e6.html">[02] props配置项</a></h4><h4 id="03-mixin混入配置项"><a class="markdownIt-Anchor" href="#03-mixin混入配置项"></a> <a href="6426.html">[03] mixin混入配置项</a></h4><h4 id="04-plugins插件"><a class="markdownIt-Anchor" href="#04-plugins插件"></a> <a href="ec79.html">[04] plugins插件</a></h4><h4 id="05-vue的style"><a class="markdownIt-Anchor" href="#05-vue的style"></a> <a href="4576.html">[05] vue的style</a></h4><h4 id="06-webstorage浏览器的本地存储"><a class="markdownIt-Anchor" href="#06-webstorage浏览器的本地存储"></a> <a href="fef3.html">[06] webStorage浏览器的本地存储</a></h4><h4 id="07-vue自定义事件"><a class="markdownIt-Anchor" href="#07-vue自定义事件"></a> <a href="e1f2.html">[07] vue自定义事件</a></h4><h4 id="08-全局事件总线"><a class="markdownIt-Anchor" href="#08-全局事件总线"></a> <a href="10d9.html">[08] 全局事件总线</a></h4><h4 id="09-消息订阅与发布"><a class="markdownIt-Anchor" href="#09-消息订阅与发布"></a> <a href="ac9b.html">[09] 消息订阅与发布</a></h4><h4 id="10-nexttick与props传递函数"><a class="markdownIt-Anchor" href="#10-nexttick与props传递函数"></a> <a href="fc6a.html">[10] nextTick与props传递函数</a></h4>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vue2.0进阶学习目录. &lt;a href=&quot;da3d.html&quot;&gt;vue2.0 基础学习目录&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 01. ref属性</title>
    <link href="https://www.odinsam.com/articles/821d.html"/>
    <id>https://www.odinsam.com/articles/821d.html</id>
    <published>2022-10-18T08:55:00.000Z</published>
    <updated>2022-10-18T12:46:37.434Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: ref属性</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="ref属性"><a class="markdownIt-Anchor" href="#ref属性"></a> ref属性</h4><ol><li>被用来给元素或者子组件注册引用信息(id的替代)</li><li>应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</li><li>使用方法 &lt;h1 ref=“title”&gt;…&lt;/h1&gt;  或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;</li><li>获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        ref属性</span><br><span class="line">        1. 被用来给元素或者子组件注册引用信息(id的替代)</span><br><span class="line">        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</span><br><span class="line">        3. 使用方法 &lt;h1 ref=&quot;title&quot;&gt;.....&lt;/h1&gt;  或者 &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2 ref=&quot;title&quot;&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;button @click=&quot;getDomClick&quot;&gt;使用ref获取dom元素&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getDomClick() &#123;</span><br><span class="line">            console.log(&#x27;function getDomClick&#x27;);</span><br><span class="line">            console.log(this.$refs.title);  //获取到真实的dom元素</span><br><span class="line">            console.log(this.$refs.stu);    // student组件对象 vc</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: ref属性&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="ref" scheme="https://www.odinsam.com/tags/ref/"/>
    
  </entry>
  
  <entry>
    <title>macos 小指令</title>
    <link href="https://www.odinsam.com/articles/ade6.html"/>
    <id>https://www.odinsam.com/articles/ade6.html</id>
    <published>2022-10-18T07:16:00.000Z</published>
    <updated>2022-10-18T07:17:25.546Z</updated>
    
    <content type="html"><![CDATA[<p>macos 中的一些小指令</p><span id="more"></span><h4 id="生成markdownde的目录树"><a class="markdownIt-Anchor" href="#生成markdownde的目录树"></a> 生成markdownde的目录树</h4><p>find . -print | sed -e ‘s;[^/]*/;|<strong><strong>;g;s;</strong></strong>|; |;g’</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;macos 中的一些小指令&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="https://www.odinsam.com/categories/macos/"/>
    
    <category term="杂项" scheme="https://www.odinsam.com/categories/macos/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 19. Vue脚手架</title>
    <link href="https://www.odinsam.com/articles/d49a.html"/>
    <id>https://www.odinsam.com/articles/d49a.html</id>
    <published>2022-10-18T07:03:00.000Z</published>
    <updated>2022-10-18T13:03:48.874Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 19 章: Vue脚手架</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><ol><li>全局安装 npm install -g @vue/cli</li><li><font color="red">切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称</li><li>进入项目目录，启动项目 npm serve</li><li>vue.js 与 vue.runtime.mini.js 的区别<ol><li>vue.js 是完整版的 vue，包含核心功能+模板解析器</li><li>vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器</li></ol></li><li>vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="6"><li>使用 vue inspect &gt; output.js 可以查看到vue脚手架的默认配置</li><li>使用 vue.config.js 可以对脚手架进行个性化定制。详情 <a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 19 章: Vue脚手架&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="cli" scheme="https://www.odinsam.com/tags/cli/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 18.4 Vue组件-单文件组件</title>
    <link href="https://www.odinsam.com/articles/9c18.html"/>
    <id>https://www.odinsam.com/articles/9c18.html</id>
    <published>2022-10-18T06:46:00.000Z</published>
    <updated>2022-10-18T12:51:39.184Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 18.4 章: vue组件-单文件组件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>18.4.单文件组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;App&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        App</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">template</span>: <span class="string">`&lt;App&gt;&lt;/App&gt;`</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">        &lt;h2&gt;App组件&lt;/h2&gt;  </span><br><span class="line">        &lt;Student&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components:&#123; Student &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:aquamarine;</span><br><span class="line">    padding: 20px;   </span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Studen组件&lt;/h2&gt;    </span><br><span class="line">        &lt;span&gt;&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;Student&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">    background-color: bisque;</span><br><span class="line">    padding: 20px;   </span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 18.4 章: vue组件-单文件组件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="component" scheme="https://www.odinsam.com/tags/component/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 18.3 Vue组件-内置关系</title>
    <link href="https://www.odinsam.com/articles/e7e4.html"/>
    <id>https://www.odinsam.com/articles/e7e4.html</id>
    <published>2022-10-18T06:43:00.000Z</published>
    <updated>2022-10-18T12:52:49.412Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 18.3 章: vue组件-内置关系</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><ol><li>vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype</li><li>通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>18.3.vue的内置关系<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            1. vue的内置关系  VueComponent.prototype.__proto__ === Vue.prototype</span></span><br><span class="line"><span class="comment">            2. 通过这关系，组件实例对象vc可以访问到Vue原型上的属性、方法</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Demo</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.a = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.b = <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> d = <span class="keyword">new</span> Demo();</span></span><br><span class="line"><span class="javascript">        <span class="comment">//显示原型属性</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;Demo.prototype&#x27;</span>, Demo.prototype);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//隐式原型属性</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;d.__proto__&#x27;</span>, d.__proto__);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 显示原型属性 和  隐式原型属性 都指向了原型对象</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Demo.prototype.x = <span class="number">100</span>; <span class="comment">//通过显示原型属性操作原型对象，添加x属性 100</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&#x27;d.__proto__.x&#x27;</span>, d.__proto__.x); <span class="comment">// 可以输出 100</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;Demo.prototype == d.__proto__&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            Demo.prototype == d.__proto__</span></span><br><span class="line"><span class="javascript">        ); <span class="comment">//返回true</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.prototype.testProto = <span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> Student = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&#x27;odinsam&#x27;</span>, <span class="attr">proto</span>: <span class="number">0</span> &#125;;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;h2&gt;student组件&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;div&gt;姓名：&#123;&#123;name&#125;&#125;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;div&gt;Vue.prototype.testProto = 100; 获取结果为: &#123;&#123;proto&#125;&#125;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                    &lt;button @click=&quot;getVmTestProto&quot;&gt;获取vm上的testProto&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;/div&gt;`</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">getVmTestProto</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.testProto);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.proto = <span class="built_in">this</span>.testProto;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">test</span>: <span class="string">&#x27;test proto&#x27;</span></span></span><br><span class="line"><span class="javascript">                &#125;;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">components</span>: &#123; Student &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;Vue.prototype === vm.__proto__&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            Vue.prototype === vm.__proto__</span></span><br><span class="line"><span class="javascript">        );</span></span><br><span class="line"><span class="javascript">        <span class="comment">// VueComponent.prototype.__proto__ === Vue.prototype</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 组件实例对象vc可以访问到Vue原型上的属性、方法</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;Student.prototype === vm.___proto__&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            Student.prototype === vm.___proto__</span></span><br><span class="line"><span class="javascript">        );</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 18.3 章: vue组件-内置关系&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="prototype" scheme="https://www.odinsam.com/tags/prototype/"/>
    
    <category term="__proto__" scheme="https://www.odinsam.com/tags/proto/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 18.2 Vue组件-组件嵌套</title>
    <link href="https://www.odinsam.com/articles/ff66.html"/>
    <id>https://www.odinsam.com/articles/ff66.html</id>
    <published>2022-10-18T06:41:00.000Z</published>
    <updated>2022-10-18T12:53:17.025Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 18.2 章: vue组件-组件嵌套</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>18.2.组件嵌套<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">App</span>&gt;</span><span class="tag">&lt;/<span class="name">App</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        Vue.config.productionTip = false;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const Student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;Student&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            data() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    stuAge: 20</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#x27;margin-left:50px;&#x27;</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名：</span><span class="template-variable">&#123;&#123;<span class="name">stuName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>年龄：</span><span class="template-variable">&#123;&#123;<span class="name">stuAge</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const School = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;school&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            components: &#123; Student &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            data() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>School组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>课程：</span><span class="template-variable">&#123;&#123;<span class="name">schName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>地址：</span><span class="template-variable">&#123;&#123;<span class="name">schAddress</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span>在校学生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const Hello = &#123; name: &#x27;Hello&#x27;, template: `<span class="tag">&lt;<span class="name">h2</span>&gt;</span>hello组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>` &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const App = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;App&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            components: &#123; Hello, school: School &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>App组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">Hello</span> <span class="attr">style</span>=<span class="string">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">Hello</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">school</span> <span class="attr">style</span>=<span class="string">&#x27;margin-left:50px;&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                App</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 18.2 章: vue组件-组件嵌套&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="component" scheme="https://www.odinsam.com/tags/component/"/>
    
    <category term="嵌套" scheme="https://www.odinsam.com/tags/%E5%B5%8C%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 18.1 vue组件-非单文件组件</title>
    <link href="https://www.odinsam.com/articles/fd0a.html"/>
    <id>https://www.odinsam.com/articles/fd0a.html</id>
    <published>2022-10-18T04:54:00.000Z</published>
    <updated>2022-10-18T13:04:20.602Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 18.1 章: vue组件-非单文件组件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="1-使用vue组件的步骤"><a class="markdownIt-Anchor" href="#1-使用vue组件的步骤"></a> 1. 使用vue组件的步骤:</h4><ol><li>创建组件 单文件组件、非单位件组件</li><li>注册组件</li><li>使用组件（组件标签）</li></ol><p>定义组件:</p><ol><li>使用Vue.extend({options}) 或者 const cpt = {options} 创建,其中options和new Vue({options})传入的options略有区别<br>组件的 options 不需要el， 最终的el由new Vue({options})决定<br>data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data=&#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">const</span> x1 = data</span><br><span class="line"><span class="keyword">const</span> x2 = data</span><br><span class="line"><span class="comment">// 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">a</span>:<span class="number">1</span>,<span class="attr">b</span>:<span class="number">2</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> x1 = data()</span><br><span class="line"><span class="keyword">const</span> x2 = data()</span><br><span class="line"><span class="comment">//通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br></pre></td></tr></table></figure><ol start="2"><li>使用 template:<code></code> 来配置组件结构</li><li>关于组件名<br>一个单词组成: 首字母小写 student 或者 首字母大写 School<br>多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)<br>不可以使用 html已有元素名称  h1 div  span 等<br>尽量使用 name 配置项指定组件在开发者工具中呈现的名字</li></ol><h4 id="2-注册组件"><a class="markdownIt-Anchor" href="#2-注册组件"></a> 2. 注册组件</h4><ol><li>局部注册  new Vue({ components:{ 组件名:组件 } })</li><li>全局注册  Vue.component(‘组件名’，组件)</li></ol><h4 id="3-使用组件"><a class="markdownIt-Anchor" href="#3-使用组件"></a> 3. 使用组件</h4><ol><li>&lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;</li><li>&lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</li></ol><h4 id="4-说明"><a class="markdownIt-Anchor" href="#4-说明"></a> 4. 说明:</h4><ol><li>组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</li><li>当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</li><li>每次调用Vue.extend返回的都是一个全新的VueComponent</li><li>this指向：<br>1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例<br>2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>18.1.非单文件组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            使用vue组件的步骤:</span></span><br><span class="line"><span class="comment">            1. 创建组件 单文件组件、非单位件组件</span></span><br><span class="line"><span class="comment">            2. 注册组件</span></span><br><span class="line"><span class="comment">            3. 使用组件（组件标签）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            定义组件:</span></span><br><span class="line"><span class="comment">            1. 使用Vue.extend(&#123;options&#125;) 或者 const cpt = &#123;options&#125; 创建,其中options和new Vue(&#123;options&#125;)传入的options略有区别</span></span><br><span class="line"><span class="comment">                组件的 options 不需要el， 最终的el由new Vue(&#123;options&#125;)决定</span></span><br><span class="line"><span class="comment">                data必须写成函数，避免组件被服用时，数据存在引用关系。示例代码如下:</span></span><br><span class="line"><span class="comment">                let data=&#123;a:1,b:2&#125;</span></span><br><span class="line"><span class="comment">                const x1 = data</span></span><br><span class="line"><span class="comment">                const x2 = data</span></span><br><span class="line"><span class="comment">                // 以上代码会导致数据存在引用关系，当x1修改 a或b 的值，x2也会改变</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                function data()&#123;</span></span><br><span class="line"><span class="comment">                    return &#123;a:1,b:2&#125;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                const x1 = data()</span></span><br><span class="line"><span class="comment">                const x2 = data()</span></span><br><span class="line"><span class="comment">                //通过函数形式可以巧妙的避开上边代码的问题  x1修改 x2不会改变</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2. 使用 template:`` 来配置组件结构</span></span><br><span class="line"><span class="comment">            3. 关于组件名</span></span><br><span class="line"><span class="comment">                一个单词组成: 首字母小写 student 或者 首字母大写 School</span></span><br><span class="line"><span class="comment">                多个单词组成: kebab-case命名  my-school  或者 CamelCase大驼峰  MyStudent(需要vue脚手架支持)</span></span><br><span class="line"><span class="comment">                不可以使用 html已有元素名称  h1 div  span 等</span></span><br><span class="line"><span class="comment">                尽量使用 name 配置项指定组件在开发者工具中呈现的名字 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            注册组件</span></span><br><span class="line"><span class="comment">            1. 局部注册  new Vue(&#123; components:&#123; 组件名:组件 &#125; &#125;)</span></span><br><span class="line"><span class="comment">            2. 全局注册  Vue.component(&#x27;组件名&#x27;，组件)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            使用组件</span></span><br><span class="line"><span class="comment">            1. &lt;组件 /&gt; 或者 &lt;组件&gt;&lt;/组件&gt;</span></span><br><span class="line"><span class="comment">            2. &lt;组件 /&gt; 不使用脚手架，会导致后续组件无法渲染</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            说明:</span></span><br><span class="line"><span class="comment">            1. 组件本质是VueComponent的构造函数，并且是由Vue.extend生成的</span></span><br><span class="line"><span class="comment">            2. 当使用组件时，vue会帮助我们创建组件的对象实例（自动调用方法new VueComponent(options)创建组件实例）</span></span><br><span class="line"><span class="comment">            3. 每次调用Vue.extend返回的都是一个全新的VueComponent</span></span><br><span class="line"><span class="comment">            4. this指向：  </span></span><br><span class="line"><span class="comment">                1.组件配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向VueComponent对象实例</span></span><br><span class="line"><span class="comment">                2.new Vue配置中：data函数、methods中的函数、watch中的函数、computed中的函数都指向Vue对象实例</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Student</span>&gt;</span><span class="tag">&lt;/<span class="name">Student</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        Vue.config.productionTip = false;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const Student = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;Student&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            data() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    stuName: &#x27;odinsam&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    stuAge: 20</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Student组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名：</span><span class="template-variable">&#123;&#123;<span class="name">stuName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>年龄：</span><span class="template-variable">&#123;&#123;<span class="name">stuAge</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const School = &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            name: &#x27;school&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            data() &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                return &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    schName: &#x27;vue学校&#x27;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    schAddress: &#x27;南京&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            template: `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>School组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>课程：</span><span class="template-variable">&#123;&#123;<span class="name">schName</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>地址：</span><span class="template-variable">&#123;&#123;<span class="name">schAddress</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            `</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        const vm = new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            el: &#x27;#root&#x27;, // 直接指定vue对应的容器</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            components: &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                Student,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">                school: School</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            &#125;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        &#125;);</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 18.1 章: vue组件-非单文件组件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="component" scheme="https://www.odinsam.com/tags/component/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 17. 生命周期</title>
    <link href="https://www.odinsam.com/articles/5bf8.html"/>
    <id>https://www.odinsam.com/articles/5bf8.html</id>
    <published>2022-10-17T17:04:00.000Z</published>
    <updated>2022-10-18T13:03:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 17 章: 生命周期</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。<br><img src="/images/lifecycle.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 17 章: 生命周期&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="生命周期" scheme="https://www.odinsam.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    <category term="挂载" scheme="https://www.odinsam.com/tags/%E6%8C%82%E8%BD%BD/"/>
    
    <category term="销毁" scheme="https://www.odinsam.com/tags/%E9%94%80%E6%AF%81/"/>
    
    <category term="更新" scheme="https://www.odinsam.com/tags/%E6%9B%B4%E6%96%B0/"/>
    
    <category term="beforeCreate" scheme="https://www.odinsam.com/tags/beforeCreate/"/>
    
    <category term="created" scheme="https://www.odinsam.com/tags/created/"/>
    
    <category term="beforeMount" scheme="https://www.odinsam.com/tags/beforeMount/"/>
    
    <category term="mounted" scheme="https://www.odinsam.com/tags/mounted/"/>
    
    <category term="beforeUpdate" scheme="https://www.odinsam.com/tags/beforeUpdate/"/>
    
    <category term="update" scheme="https://www.odinsam.com/tags/update/"/>
    
    <category term="beforeDestroy" scheme="https://www.odinsam.com/tags/beforeDestroy/"/>
    
    <category term="destroyed" scheme="https://www.odinsam.com/tags/destroyed/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 16. Filter过滤器</title>
    <link href="https://www.odinsam.com/articles/4c6a.html"/>
    <id>https://www.odinsam.com/articles/4c6a.html</id>
    <published>2022-10-17T15:58:00.000Z</published>
    <updated>2022-10-18T12:55:38.974Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 16 章: Filter过滤器</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="filter过滤器"><a class="markdownIt-Anchor" href="#filter过滤器"></a> Filter过滤器:</h4><ol><li>对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</li><li>注册过滤器 Vue.filter(‘name’,function(){}); 或 new Vue(filters:{ filtername([params]){} })</li><li>使用过滤器 {{name | filtername1[ | filtername2]}} 或者 v-bind:属性=“name | filtername1[ | filtername2]”</li><li>过滤器可以接受额外参数，多个过滤器可以串联</li><li>并没有改变元数据，只是产生新的对应数据</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>16.过滤器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            过滤器:</span></span><br><span class="line"><span class="comment">            1. 对现实的数据进行特性格式化后再显示(适用于一些简单的逻辑处理)</span></span><br><span class="line"><span class="comment">            2. 注册过滤器 Vue.filter(&#x27;name&#x27;,function()&#123;&#125;); 或 new Vue(filters:&#123; filtername([params])&#123;&#125; &#125;)</span></span><br><span class="line"><span class="comment">            3. 使用过滤器 &#123;&#123;name | filtername1[ | filtername2]&#125;&#125; 或者 v-bind:属性=&quot;name | filtername1[ | filtername2]&quot;</span></span><br><span class="line"><span class="comment">            4. 过滤器可以接受额外参数，多个过滤器可以串联</span></span><br><span class="line"><span class="comment">            5. 并没有改变元数据，只是产生新的对应数据</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>无参过滤器:&#123;&#123; username | usernameFormater&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">                带参过滤器:&#123;&#123; username | usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">                串联过滤器:&#123;&#123; username | usernameFormater |</span><br><span class="line">                usernameFormaterWithParams(&#x27;参数&#x27;)&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>无参全局过滤器:&#123;&#123; username | globalFilter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">                带参全局过滤器:&#123;&#123; username | globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">                全局过滤器+局部过滤器:&#123;&#123; username |</span><br><span class="line">                usernameFormaterWithParams(&#x27;参数&#x27;) |</span><br><span class="line">                globalFilterWithParams(&#x27;global&#x27;)&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        Vue.filter(<span class="string">&#x27;globalFilter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> value + <span class="string">&#x27;-无参全局过滤器&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        Vue.filter(<span class="string">&#x27;globalFilterWithParams&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value, param</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> value + <span class="string">&#x27;-带参全局过滤器-&#x27;</span> + param;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>, <span class="comment">// 直接指定vue对应的容器</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">username</span>: <span class="string">&#x27;odinsam&#x27;</span></span></span><br><span class="line"><span class="javascript">                &#125;;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">filters</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">usernameFormater</span>(<span class="params">value</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> value + <span class="string">&#x27;-无参数&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">usernameFormaterWithParams</span>(<span class="params">value, param</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> value + <span class="string">&#x27;-带参数&#x27;</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 16 章: Filter过滤器&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="filter" scheme="https://www.odinsam.com/tags/filter/"/>
    
    <category term="filters" scheme="https://www.odinsam.com/tags/filters/"/>
    
    <category term="过滤器" scheme="https://www.odinsam.com/tags/%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
    <category term="全局过滤器" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 15. 表单数据的收集</title>
    <link href="https://www.odinsam.com/articles/d63a.html"/>
    <id>https://www.odinsam.com/articles/d63a.html</id>
    <published>2022-10-17T14:56:00.000Z</published>
    <updated>2022-10-18T12:51:03.443Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第15章: 表单数据的收集</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><p>表单数据收集:</p><ol><li>&lt;input type=“text” v-model=“userName”/&gt; v-model收集的是value值,即用户输入的值</li><li>&lt;input type=“radio” name=“sex” value=‘male’  v-model=“sex” /&gt; v-model收集的是value值, 需要给标签配置value</li><li>&lt;input type=“checkbox” value=‘game’  v-model=“hobby” /&gt;<br>如果没有配置value 则收集的是checked true or false<br>如果配置了value v-model的初始值是非数组，则收集的是checked true or false<br>如果配置了value v-model的初始值是数组，则收集的是value组成的数组</li><li>v-model 有三个修饰符,可连续使用  v-model.trim.lazy=‘password’<br>lazy 延迟收集，失去焦点再收集数据<br>trim 过滤收尾空格<br>number 将输入的字符串转换为数值</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>15.表单数据的收集<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            表单数据收集:</span></span><br><span class="line"><span class="comment">            1. &lt;input type=&quot;text&quot; v-model=&quot;userName&quot;/&gt; v-model收集的是value值,即用户输入的值</span></span><br><span class="line"><span class="comment">            2. &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&#x27;male&#x27;  v-model=&quot;sex&quot;  /&gt; v-model收集的是value值, 需要给标签配置value</span></span><br><span class="line"><span class="comment">            3. &lt;input type=&quot;checkbox&quot; value=&#x27;game&#x27;  v-model=&quot;hobby&quot;  /&gt; </span></span><br><span class="line"><span class="comment">                如果没有配置value 则收集的是checked true or false</span></span><br><span class="line"><span class="comment">                如果配置了value v-model的初始值是非数组，则收集的是checked true or false</span></span><br><span class="line"><span class="comment">                如果配置了value v-model的初始值是数组，则收集的是value组成的数组</span></span><br><span class="line"><span class="comment">            4. v-model 有三个修饰符  </span></span><br><span class="line"><span class="comment">                lazy 延迟收集，失去焦点再收集数据   </span></span><br><span class="line"><span class="comment">                trim 过滤收尾空格  </span></span><br><span class="line"><span class="comment">                number 将输入的字符串转换为数值</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>表单数据的收集<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;submitForm&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>账号&lt;/span</span><br><span class="line">                        &gt;<span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model.lazy.trim</span>=<span class="string">&quot;userInfo.account&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码&lt;/span</span><br><span class="line">                        &gt;<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.pwd&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>年龄&lt;/span</span><br><span class="line">                        &gt;<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model.number</span>=<span class="string">&quot;userInfo.age&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;male&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>男<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;female&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>女<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>爱好<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;study&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span>学习</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;game&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span>游戏</span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span>吃饭</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>地址<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">name</span>=<span class="string">&quot;address&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">id</span>=<span class="string">&quot;address&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.address&quot;</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;nanjing&quot;</span>&gt;</span>南京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>其他信息<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">name</span>=<span class="string">&quot;other&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">id</span>=<span class="string">&quot;other&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">v-model</span>=<span class="string">&quot;userInfo.other&quot;</span></span></span><br><span class="line"><span class="tag">                        &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.agree&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                            阅读并接受<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://odinsam.com&quot;</span></span></span><br><span class="line"><span class="tag">                                &gt;</span>《用户协议》&lt;/a</span><br><span class="line">                            &gt;</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.config.productionTip = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">el</span>: <span class="string">&#x27;#root&#x27;</span>, <span class="comment">// 直接指定vue对应的容器</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">userInfo</span>: &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="attr">account</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">pwd</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">age</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">sex</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">hobby</span>: [],</span></span><br><span class="line"><span class="javascript">                        <span class="attr">address</span>: <span class="string">&#x27;nanjing&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">other</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="attr">agree</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">submitForm</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&#x27;function submitForm&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第15章: 表单数据的收集&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="v-model" scheme="https://www.odinsam.com/tags/v-model/"/>
    
    <category term="value" scheme="https://www.odinsam.com/tags/value/"/>
    
  </entry>
  
</feed>
