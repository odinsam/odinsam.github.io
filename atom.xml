<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OdinSam&#39;s blogs-一个热爱编程性格开朗的Coder</title>
  
  
  <link href="https://www.odinsam.com/atom.xml" rel="self"/>
  
  <link href="https://www.odinsam.com/"/>
  <updated>2022-10-20T18:58:18.935Z</updated>
  <id>https://www.odinsam.com/</id>
  
  <author>
    <name>OdinSam</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue3.0 学习系列</title>
    <link href="https://www.odinsam.com/articles/151c.html"/>
    <id>https://www.odinsam.com/articles/151c.html</id>
    <published>2022-10-20T11:47:00.000Z</published>
    <updated>2022-10-20T18:58:18.935Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Vue3.0学习目录. 完整代码可以在 <a href="https://github.com/odinsam/learn-vue3.0">GitHub</a> 。</p></blockquote><span id="more"></span><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><h4 id="01-初识vue3"><a class="markdownIt-Anchor" href="#01-初识vue3"></a> <a href="2774.html">[01] 初识vue3</a></h4>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Vue3.0学习目录. 完整代码可以在 &lt;a href=&quot;https://github.com/odinsam/learn-vue3.0&quot;&gt;GitHub&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Vue3.0 - 01. 初识vue3</title>
    <link href="https://www.odinsam.com/articles/2774.html"/>
    <id>https://www.odinsam.com/articles/2774.html</id>
    <published>2022-10-20T11:46:00.000Z</published>
    <updated>2022-10-20T19:01:29.457Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>初识vue3。 完整代码可以在 <a href="https://github.com/odinsam/learn-vue3.0">GitHub</a> 。</p></blockquote><span id="more"></span> <h4 id="1-mainjs-与vue2的区别"><a class="markdownIt-Anchor" href="#1-mainjs-与vue2的区别"></a> 1. main.js 与vue2的区别</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入的不在是vue的构造函数，而是一个名为createApp的工厂函数</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//createApp(app)创建应用实例对象app，类似vue2中的vm，但比vm更轻</span></span><br><span class="line">createApp(App).mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-setup函数"><a class="markdownIt-Anchor" href="#2-setup函数"></a> 2. setup函数</h4><ol><li>vue3.0中的衣蛾新配置项setup.setup是所有组合api的基础</li><li>组件中所有用都的 数据、方法等都要配置在setup中。</li><li>setup函数的返回值有两种，<ol><li>如果返回一个对象，则对象中的属性、方法等在模板中军可以直接使用</li><li>如果返回一个渲染函数，则可以自定渲染内容</li></ol></li><li>setup不能是一个async函数，因为返回值不再是return的对象而是promise。末班看不到reutnr对象中的属性。</li><li>尽量不要vue3与vue2混用。如果重名以vue3为主</li><li>ref可以将string、number转换为引用实现的实例对象(refimpl).从而实现数据的响应式操作.模板在解析是如果显示的数据是refimpl对象则会自动获取value的值.对象类型的数据使用了reactive函数实现了响应式.</li><li>reactive只能将对象类型的数据改变为响应式数据。并且在获取时不需要再通过value而可以直接获取 let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</li><li>reactive定义的响应式数据可以直接修改对象的属性、通过数组的下标操作数组.具体实现原理如下:</li></ol><figure class="highlight js"><figcaption><span>es6的proxy原理</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;<span class="attr">name</span>:<span class="string">&#x27;odinsam&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Proxy</span>(person,&#123;</span><br><span class="line">    <span class="comment">// 读取属性时调用</span></span><br><span class="line">    <span class="function"><span class="title">get</span>(<span class="params">target,propName</span>)</span> &#123; <span class="keyword">return</span> <span class="built_in">Reflect</span>.get(target,propName) &#125;</span><br><span class="line">    <span class="comment">// 新增、修改时调用</span></span><br><span class="line">    <span class="function"><span class="title">set</span>(<span class="params">target,propName,value</span>)</span> &#123; <span class="built_in">Reflect</span>.set(target,propName,value) &#125;</span><br><span class="line">    <span class="comment">// 删除属性时调用</span></span><br><span class="line">    <span class="function"><span class="title">deleteProperty</span>(<span class="params">target,propName</span>)</span>&#123; <span class="keyword">return</span> <span class="built_in">Reflect</span>.deleteProperty(target,propName) &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>备注:<br><font color="red">1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据 </font><br><font color="red">2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据 </font><br><font color="red">3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value </font></p></blockquote><ol start="9"><li>setup在beforeCreate之前执行，且this是undefind</li><li>setup的参数<br>props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性<br>context:<br>attrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 attrs    slots:收到的插槽内容，相当于 this.slots<br>emit: 分发自定义事件的函数 相当于 this.$emit</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span&gt;props信息:&#123;&#123;propa&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;span&gt;姓名:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;span&gt;班级:&#123;&#123;stuInfo1.className&#125;&#125;&lt;/span&gt;&lt;span&gt;年龄:&#123;&#123;stuInfo1.stuAge&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;span&gt;性别:&#123;&#123;stuInfo2.sex&#125;&#125;&lt;/span&gt;&lt;span&gt;地址:&#123;&#123;stuInfo2.address&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;span&gt;爱好:&#123;&#123;stuInfo2.hobby&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;span v-show=&quot;stuInfo2.newProto&quot;&gt;新属性:&#123;&#123;stuInfo2.newProto&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;slot name=&quot;slotStu&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;button @click=&quot;btnClick&quot;&gt;edit&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;addProto&quot;&gt;add Prototype&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;deleteProto&quot;&gt;delete Prototype&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;customEventClick&quot;&gt;emit触发自定义事件&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    // ref 可以将基本数据类型或者对象改变为响应式数据 let name = ref(&#x27;odinsam&#x27;)</span><br><span class="line">    // reactive 只能将对象类型的数据改变为响应式数据 let stuInfo = reactive(&#123;sex:&#x27;男&#x27;,address:&#x27;beijing&#x27;&#125;)</span><br><span class="line">    // let 代理对象=reactive(代理对象).reactive定义的响应式数据是深层次的。是基于es6的proxy实现，通过代理对象操作源对象内部数据进行操作。</span><br><span class="line">    // 实现原理</span><br><span class="line">    /**</span><br><span class="line">            let person = &#123;name:&#x27;odinsam&#x27;&#125;</span><br><span class="line">            let p = new Proxy(person,&#123;</span><br><span class="line">                // 读取属性时调用</span><br><span class="line">                get(target,propName) &#123; return Reflect.get(target,propName) &#125;</span><br><span class="line">                // 新增、修改时调用</span><br><span class="line">                set(target,propName,value) &#123; Reflect.set(target,propName,value) &#125;</span><br><span class="line">                // 删除属性时调用</span><br><span class="line">                deleteProperty(target,propName)&#123; return Reflect.deleteProperty(target,propName) &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">    */</span><br><span class="line">    //备注:</span><br><span class="line">    // 1. ref通常用来定义基本类型数据，reactive通常定义对象类型的数据</span><br><span class="line">    // 2. ref通过Object.defineProperty()的get、set方法来实现响应式，reactive通过Proxy来实现响应式，并通过Reflect操作源对象内部的数据</span><br><span class="line">    // 3. ref定义的数据需要.value获取，模板中获取不需要.value.reactive定义的数据，操作读取都不需要.value</span><br><span class="line">  import &#123; ref,reactive &#125; from &#x27;vue&#x27;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &#x27;Student&#x27;,</span><br><span class="line">    //接收父组件通过props传递的数据</span><br><span class="line">    props: [&#x27;propa&#x27;],</span><br><span class="line">    //申明父组件传递的自定义事件。不申明会有警告</span><br><span class="line">    emit: [&#x27;cmpEvent&#x27;],</span><br><span class="line">    /**</span><br><span class="line">    props:值为对象，包含：组件外部传递过来且组件内部申明接收了的属性</span><br><span class="line">    context:</span><br><span class="line">    attrs:值为对象，包含：组件外部传递过来，但没有在props配置中申明的属性。相当于vue2的 $attrs</span><br><span class="line">        slot:收到的插槽内容，相当于 this.$slots</span><br><span class="line">        emit: 分发自定义事件的函数 相当于 this.$emit</span><br><span class="line">     */</span><br><span class="line">    setup(props,context) &#123;</span><br><span class="line">        //将数据转换为refimpl对象从而实现响应式编程</span><br><span class="line">        let stuName = ref(&#x27;odinsam&#x27;)</span><br><span class="line">        let stuInfo1 = ref(&#123; className: &#x27;一年级&#x27;, stuAge: 19 &#125;)</span><br><span class="line">        let stuInfo2 = reactive(&#123; sex: &#x27;男&#x27;, address: &#x27;beijing&#x27;,hobby:[&#x27;学习&#x27;,&#x27;游戏&#x27;,&#x27;看电影&#x27;] &#125;)</span><br><span class="line">        function btnClick() &#123;</span><br><span class="line">            console.log(stuName);</span><br><span class="line">            //获取refimpl对象的值通过value属性</span><br><span class="line">            stuName.value = &#x27;changeName&#x27;</span><br><span class="line">            stuInfo1.value.className = &#x27;二年级&#x27;</span><br><span class="line">            stuInfo1.value.stuAge = 20</span><br><span class="line">            //reactive定义的代理对象在获取时不需要再通过value而可以直接获取 </span><br><span class="line">            stuInfo2.sex = &#x27;女&#x27;</span><br><span class="line">            stuInfo2.address = &#x27;nanjing&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        // vue3可以直接修改对象的属性、通过数组的下标操作数组.</span><br><span class="line">        function addProto() &#123;</span><br><span class="line">            //vue2 中 需要 this.$set(对象,&#x27;属性名&#x27;,属性的值) 操作    </span><br><span class="line">            stuInfo2.newProto = &#x27;新属性&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        function deleteProto() &#123;</span><br><span class="line">            //vue2 中 需要 this.$delete(对象,&#x27;属性名&#x27;) 操作    </span><br><span class="line">            delete stuInfo2.newProto</span><br><span class="line">        &#125;</span><br><span class="line">        function customEventClick() &#123;</span><br><span class="line">            //触发自定义事件</span><br><span class="line">            context.emit(&#x27;cmpEvent&#x27;, &#123;customEventParam:&#x27;自定义方法的参数&#x27;&#125;);   </span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName,</span><br><span class="line">            stuInfo1,</span><br><span class="line">            stuInfo2,</span><br><span class="line">            btnClick,</span><br><span class="line">            addProto,</span><br><span class="line">            deleteProto,</span><br><span class="line">            customEventClick</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;style&gt;</span><br><span class="line">  &lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">        &lt;div&gt;自定义方法的参数:&#123;&#123;cstmParam.customEventParam&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;Student propa=&quot;propa传值&quot; @cmpEvent=&quot;cmpEvent&quot;&gt;</span><br><span class="line">            &lt;!--vue3中 需要使用 v-slot:插槽名 的方式定义  不能使用 slot=&#x27;操作名&#x27; 的vue2形式--&gt;</span><br><span class="line">            &lt;template v-slot:slotStu&gt;</span><br><span class="line">                &lt;div style=&quot;background-color:aquamarine&quot;&gt;</span><br><span class="line">                    &lt;span&gt;插槽内容&lt;/span&gt;   </span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/student&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; reactive &#125; from &#x27;@vue/reactivity&#x27;;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    setup() &#123;</span><br><span class="line">        let cstmParam = reactive(&#123;&#125;)</span><br><span class="line">        function cmpEvent(param) &#123;</span><br><span class="line">            cstmParam[&#x27;customEventParam&#x27;] = param[&#x27;customEventParam&#x27;]</span><br><span class="line">        &#125;</span><br><span class="line">        return &#123;</span><br><span class="line">            cstmParam,</span><br><span class="line">            cmpEvent,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;初识vue3。 完整代码可以在 &lt;a href=&quot;https://github.com/odinsam/learn-vue3.0&quot;&gt;GitHub&lt;/a&gt; 。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
    <category term="proxy" scheme="https://www.odinsam.com/tags/proxy/"/>
    
    <category term="slot" scheme="https://www.odinsam.com/tags/slot/"/>
    
    <category term="ref" scheme="https://www.odinsam.com/tags/ref/"/>
    
    <category term="vue3" scheme="https://www.odinsam.com/tags/vue3/"/>
    
    <category term="setup" scheme="https://www.odinsam.com/tags/setup/"/>
    
    <category term="reactive" scheme="https://www.odinsam.com/tags/reactive/"/>
    
    <category term="context" scheme="https://www.odinsam.com/tags/context/"/>
    
    <category term="reflect" scheme="https://www.odinsam.com/tags/reflect/"/>
    
    <category term="defineProperty" scheme="https://www.odinsam.com/tags/defineProperty/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 15. vue-router</title>
    <link href="https://www.odinsam.com/articles/8447.html"/>
    <id>https://www.odinsam.com/articles/8447.html</id>
    <published>2022-10-20T00:52:00.000Z</published>
    <updated>2022-10-20T10:56:39.539Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 15 章: vue-router路由</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue-router路由"><a class="markdownIt-Anchor" href="#vue-router路由"></a> vue-router路由</h4><ol><li>vue-router是vue的一个插件库，专门用来实现spa应用(单页面应用)</li><li>一个路由就是一组映射关系 key-value,key是路径，value是组件(前端)或函数(后端)</li><li>创建路由表,多级路由配置child时不需要写父路径 以及 /</li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&#x27;../components/Home.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">&#x27;../components/About.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line"><span class="comment">//路由工作的两种模式 默认是hash模式 mode改变模式为history模式</span></span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    <span class="attr">routes</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: Home,</span><br><span class="line">            <span class="attr">children</span>: [</span><br><span class="line">            <span class="comment">//不需要写父路径 以及 /  也可以给路由命名 跳转时可以不用path 使用name即可</span></span><br><span class="line">                &#123; <span class="attr">path</span>: <span class="string">&#x27;news&#x27;</span>, <span class="attr">component</span>: News,<span class="attr">name</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">                <span class="attr">children</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">name</span>: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">                            <span class="comment">//路由使用parmas传参,跳转必须使用name不可以使用path  获取使用$route.params.id获取</span></span><br><span class="line">                            <span class="attr">path</span>: <span class="string">&#x27;detail/:id&#x27;</span>,</span><br><span class="line">                            <span class="attr">component</span>: Detail,</span><br><span class="line">                            <span class="comment">//给details组件传递对象，所有数据在details中可以以props的方式接收</span></span><br><span class="line">                            <span class="comment">// props:&#123;a:1,b:2&#125;</span></span><br><span class="line">                            <span class="comment">//如果props是true，则路由收到的params参数会以props的形式传递 即 id 会以props方式传递</span></span><br><span class="line">                            <span class="comment">// props:true</span></span><br><span class="line">                            <span class="comment">// 如果props是函数，则路由同样以props的形式传递参数给组件，但是这可以通过route结构获取到query并传参（此处使用解构赋值的连续写法 先从route中结构获取query，再从query中结构出id，title</span></span><br><span class="line">                            <span class="function"><span class="title">props</span>(<span class="params">&#123;query:&#123;id,title&#125;&#125;</span>)</span>&#123; <span class="keyword">return</span> &#123;id,title&#125; &#125;</span><br><span class="line">                            </span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123; <span class="attr">path</span>: <span class="string">&#x27;messages&#x27;</span>, <span class="attr">component</span>: Message &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>: About</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>加载VueRouter插件并加载路由表</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App),</span><br><span class="line">    router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>使用route-link实现路由切换 route-view 指定展示位置(被切换掉组件会被销毁)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--一级路由--&gt;</span><br><span class="line">&lt;router-link class=&quot;navitem&quot; active-class=&quot;navitem-active&quot; to=&quot;/home&quot;&gt;Home Page&lt;/router-link&gt;</span><br><span class="line">&lt;!--一级路由  replace模式：控制路由器跳转时操作浏览器历史记录的模式，默认是push追加记录，replace是替换当前记录。--&gt;</span><br><span class="line">&lt;router-link replace class=&quot;navitem&quot; active-class=&quot;navitem-active&quot; to=&quot;/home&quot;&gt;Home Page&lt;/router-link&gt;</span><br><span class="line">&lt;!--二级路由--&gt;</span><br><span class="line">&lt;router-link to=&quot;/home/news&quot;&gt;News&lt;/router-link&gt;</span><br><span class="line">&lt;!--route-view展示--&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;!-- router-link url querystring传参 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;`/home/news/detail?id=$&#123;n.id&#125;`&quot;&gt;&#123;&#123;n.title&#125;&#125;&lt;/router-link&gt;</span><br><span class="line">&lt;!-- router-link url params传参 --&gt;</span><br><span class="line">&lt;router-link :to=&quot;`/home/news/detail/$&#123;n.id&#125;`&quot;&gt;&#123;&#123;n.title&#125;&#125;-byid&lt;/router-link&gt;</span><br><span class="line">&lt;!-- router-link to对象 query传参 只能用name 不能用path--&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;</span><br><span class="line">name:&#x27;detail&#x27;,</span><br><span class="line">    query:&#123; id:n.id &#125;</span><br><span class="line">&#125;&quot;&gt;</span><br><span class="line">&#123;&#123;n.title&#125;&#125; - query对象形式</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line">&lt;!-- router-link to对象 param传参 只能用name 不能用path--&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;</span><br><span class="line">name:&#x27;detailid&#x27;,</span><br><span class="line">    params:&#123; id:n.id &#125;</span><br><span class="line">&#125;&quot;&gt;</span><br><span class="line">&#123;&#123;n.title&#125;&#125; - params对象形式</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>路由组件一般放在components文件夹，路由组件放在page文件夹</li><li>每一个组件都有自己的$route属性，存储自己的路由信息</li><li>整个应用只有一个router，可以通过$router获取</li><li>也可以不借助router-link实现路由跳转.两种模式：push模式和replace模式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编程式导航 push模式 query传参</span></span><br><span class="line"><span class="function"><span class="title">pushShow</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.$router.push(&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">        <span class="attr">query</span>:&#123; <span class="attr">id</span>:n.id &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//编程式导航 replace模式 params传参</span></span><br><span class="line"><span class="function"><span class="title">replaceShow</span>(<span class="params">n</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.$router.replace(&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;detailid&#x27;</span>,</span><br><span class="line">        <span class="attr">params</span>:&#123; <span class="attr">id</span>:n.id &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">backClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.back(); &#125;,<span class="comment">//后退</span></span><br><span class="line"><span class="function"><span class="title">forwardClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.forward(); &#125;,<span class="comment">//前进</span></span><br><span class="line"><span class="function"><span class="title">goClick</span>(<span class="params"></span>)</span> &#123; <span class="built_in">this</span>.$router.go(<span class="number">2</span>); &#125; <span class="comment">//跳转</span></span><br></pre></td></tr></table></figure><ol start="10"><li>可以使用keep-alive标签包含<router-view></router-view>用来缓存路由组件默认缓存所有组件。:include=&quot;[‘组件名’]&quot; 指定需要缓存的路由组件。exclude功能刚好相反</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive :include=&quot;[&#x27;Message&#x27;]&quot;&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br><span class="line">&lt;keep-alive :exclude=&quot;[&#x27;News&#x27;]&quot;&gt;</span><br><span class="line">    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><ol start="11"><li>当使用keep-alive包含路由组件后，组件不会触发beforeDestroy销毁流程。需要使用路由组件独有的两个生命周期解决 activated()激活、deactivated()失活。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//激活</span></span><br><span class="line"><span class="function"><span class="title">activated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.timer=<span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.opacity -= <span class="number">0.01</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.opacity &lt;= <span class="number">0</span>) <span class="built_in">this</span>.opacity = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    &#125;, <span class="number">16</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//失活</span></span><br><span class="line"><span class="function"><span class="title">deactivated</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(<span class="built_in">this</span>.timer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="12"><li>路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享路由守卫、组件内守卫</li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路由守卫分为 全局前置路由守卫、全局后置路由守卫、独享守卫、组件内守卫</span></span><br><span class="line"><span class="comment">//全局前置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.meta.isAuth) &#123;</span><br><span class="line">        <span class="comment">//判断权限</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;token&#x27;</span>) === <span class="string">&#x27;odinsam&#x27;</span>) next();</span><br><span class="line">        <span class="keyword">else</span> alert(<span class="string">&#x27;undefind token&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//全局后置路由守卫 - 初始化、每次路由切换时被调用</span></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.title = to.meta.title || <span class="string">&#x27;index&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="13"><li>独享路由守卫是在加某一个需要控制的路由上.<font color="red">代码加在路由表需要控制的路由中</font></li></ol><figure class="highlight js"><figcaption><span>router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>)</span> &#123;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="14"><li>组件内守卫<font color="red">代码加在组件里需要控制的路由中</font></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//当路由进入之前   通过路由规则，进入该组件时被调用</span><br><span class="line">beforeRouteEnter (to, from, next) &#123; // ... &#125;,</span><br><span class="line">//当路由离开之前    通过路由规则，离开改组件时被调用</span><br><span class="line">beforeRouteLeave (to, from, next) &#123; // ... &#125; </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 15 章: vue-router路由&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="vue-router" scheme="https://www.odinsam.com/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 14. vuex</title>
    <link href="https://www.odinsam.com/articles/97b5.html"/>
    <id>https://www.odinsam.com/articles/97b5.html</id>
    <published>2022-10-20T00:42:00.000Z</published>
    <updated>2022-10-20T00:57:21.400Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 14 章: vuex</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vuex"><a class="markdownIt-Anchor" href="#vuex"></a> vuex</h4><font color="red">vue组件通过dispatch('key',param)找到store的actions(key,param),action通过commit找到mutations(key,function),mutations执行回调函数修改state中的数据，vue根据state数据的改变自动重新render模板.<p>vue组件也可以直接通过commit找到mutations。这种情况一般用在所需要的参数是固定已知的情况下</p></font>1. 安装vuex vue2.0需要安装vuex3 npm i vuex@32. 创建 store/index.js。store中包含actions、mutations、state、getters。<figure class="highlight js"><figcaption><span>store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line">Vue.use(Vuex);</span><br><span class="line"><span class="comment">// 模块化创建storeOptions</span></span><br><span class="line"><span class="keyword">const</span> stuOptions = &#123;</span><br><span class="line">    <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">add</span>(<span class="params">context, param</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;action add&#x27;</span>, param);</span><br><span class="line">            context.commit(<span class="string">&#x27;ADD&#x27;</span>, param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">ADD</span>(<span class="params">state, param</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;mutations add&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> stuId =</span><br><span class="line">                state.stus.length === <span class="literal">undefined</span> ? <span class="number">1</span> : state.stus.length + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">const</span> stu = &#123; <span class="attr">id</span>: stuId, <span class="attr">stuName</span>: stuId + <span class="string">&#x27;-&#x27;</span> + param.stuName &#125;;</span><br><span class="line">            state.stus.push(stu);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">state</span>: &#123; <span class="attr">stus</span>: [] &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">bigSum</span>(<span class="params">state</span>)</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">            <span class="keyword">return</span> state.stus.length * <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">    <span class="attr">modules</span>: &#123;</span><br><span class="line">        stuOptions</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>创建vue时，在配置项中配置store</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    store,</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>在组件中使用store</li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;div&gt;放大十倍后的学生人数:&#123;&#123;$store.getters[&#x27;stuOptions/bigSum&#x27;]&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;s in $store.state.stuOptions.stus&quot; :key=&quot;s.id&quot;&gt;&#123;&#123;s.stuName&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        console.log(this.$store);</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;span&gt;共计学生&#123;&#123;stusSum&#125;&#125;,&lt;/span&gt;&lt;button @click=&quot;addStu&quot;&gt;添加学生&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">    &lt;Student&gt;&lt;/Student&gt;&lt;br/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">import &#123;mapState,mapGetters,mapMutations&#125; from &#x27;vuex&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addStu() &#123;</span><br><span class="line">            this.$store.dispatch(&#x27;stuOptions/add&#x27;, &#123; stuName: &#x27;odin&#x27; &#125;);</span><br><span class="line">            //跳过dispatch字节commit到mutations</span><br><span class="line">            // this.$store.commit(&#x27;ADD&#x27;,&#123; stuName: &#x27;odin&#x27; &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        //使用映射的形式 映射mutations</span><br><span class="line">        // ...mapMutations([&#x27;ADD&#x27;])</span><br><span class="line">        // ...mapMutations(&#x27;stuOptions&#x27;,[&#x27;ADD&#x27;])</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">        stusSum() &#123;</span><br><span class="line">            console.log(this.$store);</span><br><span class="line">            return this.$store.state.stuOptions.stus.length</span><br><span class="line">        &#125;,</span><br><span class="line">        //使用映射的形式 映射state为计算属性</span><br><span class="line">        // ...mapState([&#x27;stus&#x27;])</span><br><span class="line">        ...mapState(&#x27;stuOptions&#x27;,[&#x27;stus&#x27;])</span><br><span class="line">        //...mapGetters([&#x27;stus&#x27;])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 14 章: vuex&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="vuex" scheme="https://www.odinsam.com/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 13. slot插槽</title>
    <link href="https://www.odinsam.com/articles/d7ab.html"/>
    <id>https://www.odinsam.com/articles/d7ab.html</id>
    <published>2022-10-19T20:25:00.000Z</published>
    <updated>2022-10-19T20:31:38.666Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 13 章: slot插槽</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="slot插槽"><a class="markdownIt-Anchor" href="#slot插槽"></a> slot插槽</h4><ol><li>让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</li><li>插槽分为 默认插槽、具名插槽、作用域插槽</li><li>默认插槽: 数据定义在父组件中</li></ol><figure class="highlight html"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;美食&quot;</span>&gt;</span></span><br><span class="line">  html结构</span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>具名插槽: 数据定义在父组件中</li></ol><figure class="highlight html"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;美食&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&#x27;插槽名称&#x27;</span>&gt;</span></span><br><span class="line">        html结构</span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:</span>插槽名称<span class="attr">2</span>&gt;</span></span><br><span class="line">        html结构</span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;插槽名称1&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#x27;插槽名称2&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>作用域插槽:数据定义在子组件中</li></ol><figure class="highlight html"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Category</span> <span class="attr">title</span>=<span class="string">&quot;美食&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">&quot;&#123;stus,msg&#125;&quot;</span>&gt;</span></span><br><span class="line">        html结构</span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:</span>插槽名称<span class="attr">2</span>&gt;</span></span><br><span class="line">        html结构</span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Category</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:stus</span>=<span class="string">&quot;子组件数据&quot;</span> <span class="attr">msg</span>=<span class="string">&quot;作用域&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        slot插槽</span><br><span class="line">        1. 让父组件可以向子组件指定的位置插入html结构，也是一种组件间通信的方式，适用于 父组件给子组件传递数据</span><br><span class="line">        2. 插槽分为 默认插槽、具名插槽、作用域插槽</span><br><span class="line">        3. 默认插槽: 数据定义在父组件中</span><br><span class="line">            父组件  </span><br><span class="line">            &lt;Category title=&quot;美食&quot;&gt;</span><br><span class="line">                html结构</span><br><span class="line">            &lt;/Category&gt; </span><br><span class="line">            子组件 </span><br><span class="line">            &lt;template&gt;</span><br><span class="line">                &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        4. 具名插槽: 数据定义在父组件中</span><br><span class="line">            父组件  </span><br><span class="line">            &lt;Category title=&quot;美食&quot;&gt;</span><br><span class="line">                &lt;template slot=&#x27;插槽名称&#x27;&gt;</span><br><span class="line">                    html结构</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;template v-slot:插槽名称2&gt;</span><br><span class="line">                    html结构</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/Category&gt; </span><br><span class="line">            子组件 </span><br><span class="line">            &lt;template&gt;</span><br><span class="line">                &lt;slot name=&#x27;插槽名称1&#x27;&gt;&lt;/slot&gt;</span><br><span class="line">                &lt;slot name=&#x27;插槽名称2&#x27;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        5. 作用域插槽:数据定义在子组件中</span><br><span class="line">            父组件  </span><br><span class="line">            &lt;Category title=&quot;美食&quot;&gt;</span><br><span class="line">                &lt;template slot-scope=&quot;&#123;stus,msg&#125;&quot;&gt;</span><br><span class="line">                    html结构</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">                &lt;template v-slot:插槽名称2&gt;</span><br><span class="line">                    html结构</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/Category&gt; </span><br><span class="line">            子组件</span><br><span class="line">            &lt;template&gt;</span><br><span class="line">                &lt;slot :stus=&quot;子组件数据&quot; msg=&quot;作用域&quot;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;div class=&quot;dvslot&quot;&gt;</span><br><span class="line">        &lt;Category title=&quot;美食&quot;&gt;</span><br><span class="line">            &lt;img slot=&quot;center&quot; src=&quot;https://s2.ax1x.com/2021/01/16/srJ1q0.jpg&quot; style=&quot;width:100%;&quot; alt=&quot;美食&quot; /&gt;</span><br><span class="line">            &lt;div class=&quot;footer&quot; slot=&quot;footer&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;http://odinsam.com&quot;&gt;热门美食&lt;/a&gt;&lt;a href=&quot;http://odinsam.com&quot;&gt;更多美食&lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">        &lt;Category title=&quot;游戏&quot;&gt;</span><br><span class="line">            &lt;ul slot=&quot;center&quot;&gt;</span><br><span class="line">                &lt;li v-for=&quot;(g,index) in games&quot; :key=&quot;index&quot;&gt;&#123;&#123;g&#125;&#125;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;a class=&quot;footer&quot; slot=&quot;footer&quot; href=&quot;http://odinsam.com&quot;&gt;热门游戏&lt;/a&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">        &lt;Category title=&quot;影视&quot;&gt;</span><br><span class="line">            &lt;video slot=&quot;center&quot; controls src=&quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&quot;&gt;&lt;/video&gt;</span><br><span class="line">            &lt;template  v-slot:footer&gt;</span><br><span class="line">                &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">                    &lt;a href=&quot;http://odinsam.com&quot;&gt;热门&lt;/a&gt;</span><br><span class="line">                    &lt;a href=&quot;http://odinsam.com&quot;&gt;经典&lt;/a&gt;</span><br><span class="line">                    &lt;a href=&quot;http://odinsam.com&quot;&gt;推荐&lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;h4&gt;欢迎观看&lt;/h4&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">        &lt;Student title=&quot;作用于插槽&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;&#123;stus,msg&#125;&quot;&gt;</span><br><span class="line">                &lt;ul slot=&quot;center&quot;&gt;</span><br><span class="line">                    &lt;h4 v-for=&quot;stu in stus&quot; :key=&quot;stu.id&quot;&gt;&#123;&#123;stu.name&#125;&#125;&lt;/h4&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">                &lt;h4&gt;&#123;&#123;msg&#125;&#125;&lt;/h4&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/Student&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Category from &#x27;./components/Category.vue&#x27;;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            &#x27;foods&#x27;: [&#x27;火锅&#x27;, &#x27;小龙虾&#x27;, &#x27;牛排&#x27;, &#x27;烧烤&#x27;],</span><br><span class="line">            &#x27;games&#x27;: [&#x27;魔兽&#x27;, &#x27;炉石&#x27;, &#x27;暗黑&#x27;, &#x27;星际&#x27;],</span><br><span class="line">            &#x27;films&#x27;:[&#x27;西游&#x27;,&#x27;三国&#x27;,&#x27;红楼梦&#x27;,&#x27;水浒&#x27;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Category,Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">.dvslot</span><br><span class="line">&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line">video&#123;</span><br><span class="line">    width:100%;</span><br><span class="line">&#125;</span><br><span class="line">.footer</span><br><span class="line">&#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>Category.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;slot name=&quot;center&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stus: [</span><br><span class="line">                &#123; id: 1, name: &quot;odinsam1&quot; &#125;,</span><br><span class="line">                &#123; id: 2, name: &quot;odinsam2&quot; &#125;,</span><br><span class="line">                &#123; id: 3, name: &quot;odinsam3&quot; &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props: [&#x27;title&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:400px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>Student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;slot :stus=&quot;stus&quot; msg=&quot;作用域&quot;&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stus: [</span><br><span class="line">                &#123; id: 1, name: &quot;odinsam1&quot; &#125;,</span><br><span class="line">                &#123; id: 2, name: &quot;odinsam2&quot; &#125;,</span><br><span class="line">                &#123; id: 3, name: &quot;odinsam3&quot; &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props: [&#x27;title&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:400px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 13 章: slot插槽&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="slot" scheme="https://www.odinsam.com/tags/slot/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 12. 配置代理</title>
    <link href="https://www.odinsam.com/articles/551e.html"/>
    <id>https://www.odinsam.com/articles/551e.html</id>
    <published>2022-10-19T18:56:00.000Z</published>
    <updated>2022-10-19T19:39:12.377Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 12 章: 配置代理</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="配置代理"><a class="markdownIt-Anchor" href="#配置代理"></a> 配置代理</h4><ol><li>yarn add axios 安装axios库</li><li>在vue.config.js中添加代理配置 devServer:{ 配置内容 }</li><li>简单配置 proxy: ‘<a href="http://localhost:8899">http://localhost:8899</a>’</li><li>复杂配置,可配置多个代理</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">proxy: &#123;</span><br><span class="line">&#x27;/odinapi&#x27;: &#123;</span><br><span class="line">    target: &#x27;http:<span class="comment">//localhost:8899&#x27;, //目标请求服务器</span></span><br><span class="line">        pathRewrite: &#123; &#x27;^/odinapi&#x27;: &#x27;&#x27; &#125;, <span class="comment">//路径重写匹配服务器路径</span></span><br><span class="line">        ws: <span class="literal">true</span>, <span class="comment">//是否支持websocket</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span> <span class="comment">//用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在需要请求的地方发起axios请求获取数据</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码:</h4><figure class="highlight js"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&#x27;@vue/cli-service&#x27;</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = defineConfig(&#123;</span><br><span class="line">    <span class="attr">transpileDependencies</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//关闭语法检查</span></span><br><span class="line">    <span class="attr">lintOnSave</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">//简单配置代理服务器 不能添加多个代理服务器</span></span><br><span class="line">    <span class="comment">// devServer: &#123;</span></span><br><span class="line">    <span class="comment">//     proxy: &#x27;http://localhost:5000&#x27;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;/odinapi&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;http://localhost:8899&#x27;</span>, <span class="comment">//目标请求服务器</span></span><br><span class="line">                <span class="attr">pathRewrite</span>: &#123; <span class="string">&#x27;^/odinapi&#x27;</span>: <span class="string">&#x27;&#x27;</span> &#125;, <span class="comment">//路径重写匹配服务器路径</span></span><br><span class="line">                <span class="attr">ws</span>: <span class="literal">true</span>, <span class="comment">//是否支持websocket</span></span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span> <span class="comment">//用户控制请求头中的host</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        vue配置代理</span><br><span class="line">        1. yarn add axios 安装axios库</span><br><span class="line">        2. 在vue.config.js中添加代理配置 devServer:&#123; 配置内容 &#125;</span><br><span class="line">        3. 简单配置 proxy: &#x27;http://localhost:8899&#x27;</span><br><span class="line">        4. 复杂配置,可配置多个代理</span><br><span class="line">            proxy: &#123;</span><br><span class="line">                &#x27;/odinapi&#x27;: &#123;</span><br><span class="line">                    target: &#x27;http://localhost:8899&#x27;, //目标请求服务器</span><br><span class="line">                    pathRewrite: &#123; &#x27;^/odinapi&#x27;: &#x27;&#x27; &#125;, //路径重写匹配服务器路径</span><br><span class="line">                    ws: true, //是否支持websocket</span><br><span class="line">                    changeOrigin: true //用户控制请求头中的host  true服务器获取到的请求头是服务器的请求ip localhost:8899，false是前端请求ip localhost:8080</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        5. 在需要请求的地方发起axios请求获取数据</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">    &lt;button @click=&quot;getStus&quot;&gt;获取学生信息&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li v-for=&quot;stu in stus&quot; :key=&quot;stu.id&quot;&gt;</span><br><span class="line">            &lt;Student stuName=&quot;stu.stuName&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">import axios from &#x27;axios&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stus:[]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getStus() &#123;</span><br><span class="line">            axios.get(&#x27;http://localhost:8080/odinapi/student&#x27;).then(</span><br><span class="line">                response =&gt; &#123;</span><br><span class="line">                    console.log(&#x27;success&#x27;, response.data);</span><br><span class="line">                    this.stus = response.data;</span><br><span class="line">                &#125;,</span><br><span class="line">                error =&gt; &#123;</span><br><span class="line">                    console.log(&#x27;error&#x27;,error.message);</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 12 章: 配置代理&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="axios" scheme="https://www.odinsam.com/tags/axios/"/>
    
    <category term="代理" scheme="https://www.odinsam.com/tags/%E4%BB%A3%E7%90%86/"/>
    
    <category term="proxy" scheme="https://www.odinsam.com/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 11. 动画效果</title>
    <link href="https://www.odinsam.com/articles/f2de.html"/>
    <id>https://www.odinsam.com/articles/f2de.html</id>
    <published>2022-10-19T15:17:00.000Z</published>
    <updated>2022-10-19T15:53:00.069Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 11 章: 动画效果</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="动画效果"><a class="markdownIt-Anchor" href="#动画效果"></a> 动画效果</h4><ol><li>普通实现方式: 使用 @keyframes amName{ from{transform: translateX(-100%);}to{transform: translateX(0);}} 创建关键帧并定义动画</li><li>定义vue的进入动画  .name-enter-active{animation: odinAnimate 1s linear;}</li><li>定义vue的离开动画  .name-leave-active{animation: odinAnimate 1s linear reverse;}</li><li>使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</li></ol><h4 id="过度动画"><a class="markdownIt-Anchor" href="#过度动画"></a> 过度动画</h4><ol><li>定义过度动画 .name-enter,.name-leave-to{transform: translateX(-100%);} 和 .name-leave .name-enter-to{transform: translateX(0);}</li><li>定义过滤效果 .name-enter-active,.name-leave-active{transition: 3s linear;}</li><li>多个元素需要相同的动画效果需要使用 transition-group</li></ol><h4 id="第三方动画库-详见-httpsanimatestyle"><a class="markdownIt-Anchor" href="#第三方动画库-详见-httpsanimatestyle"></a> 第三方动画库 详见 <a href="https://animate.style/">https://animate.style/</a></h4><ol><li>yarn add animate.css</li><li>引入 animate.css   import ‘animate.css’</li><li>给需要动画的组件 添加 name=‘animate__animated animate__bounce’</li><li>添加 enter-active-class=‘动画名称’  leave-active-class=‘动画名称’</li></ol><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        动画效果</span><br><span class="line">        1. 普通实现方式: 使用 @keyframes amName&#123; from&#123;transform: translateX(-100%);&#125;to&#123;transform: translateX(0);&#125;&#125; 创建关键帧并定义动画</span><br><span class="line">        2. 定义vue的进入动画  .name-enter-active&#123;animation: odinAnimate 1s linear;&#125;</span><br><span class="line">        3. 定义vue的离开动画  .name-leave-active&#123;animation: odinAnimate 1s linear reverse;&#125;</span><br><span class="line">        4. 使用transition包裹需要动画的组件,appear属性可以在组件第一次加载的时候执行enter动画</span><br><span class="line"></span><br><span class="line">        过度动画</span><br><span class="line">        1. 定义过度动画 .name-enter,.name-leave-to&#123;transform: translateX(-100%);&#125; 和 .name-leave .name-enter-to&#123;transform: translateX(0);&#125;</span><br><span class="line">        2. 定义过滤效果 .name-enter-active,.name-leave-active&#123;transition: 3s linear;&#125;</span><br><span class="line">        3. 多个元素需要相同的动画效果需要使用 transition-group</span><br><span class="line"></span><br><span class="line">        第三方动画库 详见 https://animate.style/</span><br><span class="line">        1. yarn add animate.css</span><br><span class="line">        2. 引入 animate.css   import &#x27;animate.css&#x27;</span><br><span class="line">        3. 给需要动画的组件 添加 name=&#x27;animate__animated animate__bounce&#x27;</span><br><span class="line">        4. 添加 enter-active-class=&#x27;动画名称&#x27;  leave-active-class=&#x27;动画名称&#x27;</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;showComponent&quot;&gt;显示、隐藏组件&lt;/button&gt;</span><br><span class="line">    &lt;!--动画效果--&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;transition name=&quot;odinam1&quot; appear&gt;</span><br><span class="line">            &lt;Student v-show=&quot;isShow&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--过度动画--&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;transition name=&quot;odinam2&quot; appear&gt;</span><br><span class="line">            &lt;Student v-show=&quot;isShow&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        &lt;/transition&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--组过度动画--&gt; </span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;transition-group name=&quot;odinam2&quot; appear &gt;</span><br><span class="line">            &lt;Student v-show=&quot;isShow&quot; key=&quot;1&quot;&gt;&lt;/Student&gt;</span><br><span class="line">            &lt;Student v-show=&quot;!isShow&quot; key=&quot;2&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        &lt;/transition-group&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--第三方动画库--&gt; </span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;transition-group name=&#x27;animate__animated animate__bounce&#x27; appear enter-active-class=&#x27;animate__shakeY&#x27;  leave-active-class=&#x27;animate__bounceOutRight&#x27;&gt;</span><br><span class="line">            &lt;Student v-show=&quot;isShow&quot; key=&quot;1&quot;&gt;&lt;/Student&gt;</span><br><span class="line">            &lt;Student v-show=&quot;!isShow&quot; key=&quot;2&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        &lt;/transition-group&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">import &#x27;animate.css&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            isShow:true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        showComponent() &#123;</span><br><span class="line">            this.isShow = !this.isShow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.odinam2-enter-active,.odinam2-leave-active</span><br><span class="line">&#123;</span><br><span class="line">    transition: 1s linear;</span><br><span class="line">&#125;</span><br><span class="line">.odinam2-enter,.odinam2-leave-to</span><br><span class="line">&#123;</span><br><span class="line">    transform: translateX(-100%);</span><br><span class="line">&#125;</span><br><span class="line">.odinam2-enter-to,.odinam2-leave</span><br><span class="line">&#123;</span><br><span class="line">    transform: translateX(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.odinam1-enter-active&#123;</span><br><span class="line">    animation: odinAnimate 1s linear;</span><br><span class="line">&#125;</span><br><span class="line">.odinam1-leave-active&#123;</span><br><span class="line">    animation: odinAnimate 1s linear reverse;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes odinAnimate &#123;</span><br><span class="line">    from&#123;</span><br><span class="line">        transform: translateX(-100%);</span><br><span class="line">    &#125;</span><br><span class="line">    to&#123;</span><br><span class="line">        transform: translateX(0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 11 章: 动画效果&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="动画" scheme="https://www.odinsam.com/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="animate" scheme="https://www.odinsam.com/tags/animate/"/>
    
    <category term="过度效果" scheme="https://www.odinsam.com/tags/%E8%BF%87%E5%BA%A6%E6%95%88%E6%9E%9C/"/>
    
    <category term="enter" scheme="https://www.odinsam.com/tags/enter/"/>
    
    <category term="leave" scheme="https://www.odinsam.com/tags/leave/"/>
    
    <category term="enter-to" scheme="https://www.odinsam.com/tags/enter-to/"/>
    
    <category term="leave-to" scheme="https://www.odinsam.com/tags/leave-to/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 10. nextTick与props传递函数</title>
    <link href="https://www.odinsam.com/articles/fc6a.html"/>
    <id>https://www.odinsam.com/articles/fc6a.html</id>
    <published>2022-10-19T14:39:00.000Z</published>
    <updated>2022-10-19T14:43:00.124Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 10 章: nextTick与props传递函数</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="nexttick与props传递函数"><a class="markdownIt-Anchor" href="#nexttick与props传递函数"></a> nextTick与props传递函数</h4><ol><li>this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</li><li>使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</li><li>父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        nextTick与props传递函数</span><br><span class="line">        1. this.$nextTick(回调函数) 下一次dom更新结束后执行回调函数</span><br><span class="line">        2. 使用时机： 当改变数据后，要基于更新后的新dom进行某些操作时，使用nextTick利用回调函数执行操作</span><br><span class="line">        3. 父组件可以通过props给子组件传递函数，当子组件执行函数回调时，回传数据达到子组件向父组件传递数据的目的</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">        &lt;span v-if=&quot;!isEdit&quot;&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;span v-else&gt;&lt;input ref=&quot;txtStuName&quot; type=&quot;text&quot; v-model=&quot;stuName&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;editOrOkClick&quot;&gt;&#123;&#123;btnText[isEdit]&#125;&#125;&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            isEdit:false,</span><br><span class="line">            stuName: &#x27;odinsam&#x27;,</span><br><span class="line">            btnText:&#123;true:&#x27;确定&#x27;,false:&#x27;编辑&#x27;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    //app组件传递的回调函数</span><br><span class="line">    props:[&#x27;getStuName&#x27;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">        editOrOkClick() &#123;</span><br><span class="line">            if (this.isEdit)</span><br><span class="line">            &#123;</span><br><span class="line">                //子组件调用父组件通过props传递的回调函数向父组件传递数据</span><br><span class="line">                this.getStuName(&#123;stuName:this.stuName&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.isEdit = !this.isEdit;</span><br><span class="line">            // 在本次操作执行完成dom修改后，执行回调函数，使新出现的文本框获得焦点</span><br><span class="line">            this.$nextTick(function () &#123;</span><br><span class="line">                if (this.isEdit) &#123;</span><br><span class="line">                    this.$refs.txtStuName.focus();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;Student :getStuName=&quot;getStuName&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getStuName(param) &#123;</span><br><span class="line">            console.log(param);</span><br><span class="line">            this.stuName = param.stuName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 10 章: nextTick与props传递函数&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
    <category term="nextTick" scheme="https://www.odinsam.com/tags/nextTick/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 09. 消息订阅与发布</title>
    <link href="https://www.odinsam.com/articles/ac9b.html"/>
    <id>https://www.odinsam.com/articles/ac9b.html</id>
    <published>2022-10-19T13:51:00.000Z</published>
    <updated>2022-10-19T14:09:18.490Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 09 章: 消息订阅与发布</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="消息订阅与发布"><a class="markdownIt-Anchor" href="#消息订阅与发布"></a> 消息订阅与发布</h4><ol><li>yarn add pubsub-js 安装消息订阅与发布框架</li><li>订阅消息 mounted时 this.pubId = pubsub.subscribe(‘消息名称’, (消息名称, 消息传递数据) =&gt; {}); 消息传递数据可以是字符串、数据、数据或对象</li><li>取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</li><li>组件发布消息 pubsub.publish(‘消息名称’,消息传递数据})</li></ol><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        消息订阅与发布</span><br><span class="line">        1. yarn add pubsub-js 安装消息订阅与发布框架</span><br><span class="line">        2. 订阅消息 mounted时 this.pubId = pubsub.subscribe(&#x27;消息名称&#x27;, (消息名称, 消息传递数据) =&gt; &#123;&#125;); 消息传递数据可以是字符串、数据、数据或对象</span><br><span class="line">        3. 取消订阅消息  beforeDestroy时 pubsub.unsubscribe(this.pubId)</span><br><span class="line">        4. 组件发布消息 pubsub.publish(&#x27;消息名称&#x27;,消息传递数据&#125;)</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt; &lt;br/&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        this.pubId = pubsub.subscribe(&#x27;subMessage&#x27;, (messasgeName, param) =&gt; &#123;</span><br><span class="line">            console.log(&#x27;messasgeName&#x27;,messasgeName);</span><br><span class="line">            this.stuName = param.stuName</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">        pubsub.unsubscribe(this.pubId)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;publishMessageClick&quot;&gt;发布消息传递数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import pubsub from &#x27;pubsub-js&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        publishMessageClick() &#123;</span><br><span class="line">            pubsub.publish(&#x27;subMessage&#x27;,&#123;stuName:this.stuName&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 09 章: 消息订阅与发布&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="消息订阅" scheme="https://www.odinsam.com/tags/%E6%B6%88%E6%81%AF%E8%AE%A2%E9%98%85/"/>
    
    <category term="消息发布" scheme="https://www.odinsam.com/tags/%E6%B6%88%E6%81%AF%E5%8F%91%E5%B8%83/"/>
    
    <category term="subscribe" scheme="https://www.odinsam.com/tags/subscribe/"/>
    
    <category term="unsubscribe" scheme="https://www.odinsam.com/tags/unsubscribe/"/>
    
    <category term="publish" scheme="https://www.odinsam.com/tags/publish/"/>
    
    <category term="pubsub-js" scheme="https://www.odinsam.com/tags/pubsub-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 08. 全局事件总线</title>
    <link href="https://www.odinsam.com/articles/10d9.html"/>
    <id>https://www.odinsam.com/articles/10d9.html</id>
    <published>2022-10-19T13:41:00.000Z</published>
    <updated>2022-10-19T13:54:08.135Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 08 章: 全局事件总线</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue全局事件总线"><a class="markdownIt-Anchor" href="#vue全局事件总线"></a> vue全局事件总线</h4><ol><li>一种组件间通信的方式，适用于任意组件通信</li><li>在main.js中通过 beforeCreate(){ Vue.prototype.$bus = this; } 安装全局事件总线</li><li>主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</li><li>通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</li></ol><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    全局事件总线:</span></span><br><span class="line"><span class="comment">    1. 一种组件间通信的方式，适用于任意组件通信</span></span><br><span class="line"><span class="comment">    2. 在main.js中通过 beforeCreate()&#123; Vue.prototype.$bus = this; &#125; 安装全局事件总线</span></span><br><span class="line"><span class="comment">    3. 主要利用的原理是 VueComponent.prototype.__proto__ === Vue.prototype vc可以使用在vm的原型上添加的属性、方法来实现.</span></span><br><span class="line"><span class="comment">    4. 通信方式主要依靠自定义事件，在需要通信的双方(app.vue/student.vue)添加自定义事件和处理自定义事件.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App),</span><br><span class="line">    <span class="function"><span class="title">beforeCreate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        Vue.prototype.$bus = <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        </span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;&lt;br/&gt;</span><br><span class="line">    &lt;span&gt;学生的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        //给student添加自定义事件</span><br><span class="line">        this.$bus.$on(&#x27;customEvent&#x27;, (param) =&gt; &#123;</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">        this.$bus.off(&#x27;customEvent&#x27;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;button @click=&quot;busEventClick&quot;&gt;通过全局事件总线触发事件传递数据&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam-eventBus&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        busEventClick() &#123;</span><br><span class="line">            console.log(&#x27;function busEventClick&#x27;);</span><br><span class="line">            this.$bus.$emit(&#x27;customEvent&#x27;,&#123;name:this.stuName&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 08 章: 全局事件总线&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="eventbus" scheme="https://www.odinsam.com/tags/eventbus/"/>
    
    <category term="全局事件总线" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 07. vue自定义事件</title>
    <link href="https://www.odinsam.com/articles/e1f2.html"/>
    <id>https://www.odinsam.com/articles/e1f2.html</id>
    <published>2022-10-19T13:14:00.000Z</published>
    <updated>2022-10-19T13:18:48.260Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 07 章: vue自定义事件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue自定义事件"><a class="markdownIt-Anchor" href="#vue自定义事件"></a> vue自定义事件</h4><ol><li><p>可以给组件使用 v-on:自定义事件=“事件处理方法” 或者 @自定义事件=“事件处理方法” 来绑定并处理自定义事件.适用于子组件给父组件传递数据</p></li><li><p>在组件中 使用 this.$emit(‘自定义事件’,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</p></li><li><p>也可以通过 ref=‘refName’ 在mounted中 使用 $on 的方式绑定并处理自定义事件</p></li><li><p>mounted中使用 this.<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mi>e</mi><mi>f</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>r</mi><mi>e</mi><mi>f</mi><mi>N</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">refs.refName.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit">s</span><span class="mord mathrm">.</span><span class="mord mathit" style="margin-right:0.02778em;">r</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mord mathit">a</span><span class="mord mathit">m</span><span class="mord mathit">e</span><span class="mord mathrm">.</span></span></span></span>on(‘自定义事件’,function(参数){ })的方式绑定并处理</p></li><li><p>ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</p></li><li><p>在绑定的组件可以使用 this.$off() 解绑自定义事件.</p><p>this.$off(‘eventName’)  解绑一个自定义事件</p><p>this.$off([‘eventName1’,‘eventName2’])  解绑多个自定义事件</p><p>this.$off()  解绑所有的自定义事件</p></li><li><p>如果组件被销毁，那么绑定的自定义事件不再有效果。</p></li><li><p>注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</p></li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;sendStuName&quot;&gt;自定义事件-回传学生的名字&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;unbind&quot;&gt;解绑自定义事件&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;destoryStu&quot;&gt;销毁组件&lt;/button&gt;&lt;br/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    props:[&#x27;title&#x27;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">        sendStuName() &#123;</span><br><span class="line">            console.log(&#x27;function sendStuName&#x27;);</span><br><span class="line">            //触发自定义事件 customEvent,传参对象</span><br><span class="line">            this.$emit(&#x27;customEvent&#x27;,&#123;name:this.stuName&#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        unbind() &#123;</span><br><span class="line">            //解绑一个自定义事件</span><br><span class="line">            this.$off(&#x27;customEvent&#x27;)</span><br><span class="line">            //解绑多个自定义事件</span><br><span class="line">            this.$off([&#x27;customEvent&#x27;])</span><br><span class="line">            // 解绑所有的自定义事件</span><br><span class="line">            this.$off()</span><br><span class="line">        &#125;,</span><br><span class="line">        destoryStu() &#123;</span><br><span class="line">            // 销毁当前组件对象</span><br><span class="line">            this.$destroy();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    unbind: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:300px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        vue自定义事件</span><br><span class="line">        1. 可以给组件使用 v-on:自定义事件=&quot;事件处理方法&quot; 或者 @自定义事件=&quot;事件处理方法&quot; 来绑定并处理自定义事件.适用于子组件给父组件传递数据</span><br><span class="line">        2. 在组件中 使用 this.$emit(&#x27;自定义事件&#x27;,参数) 的形式触发自定义事件.参数可以是 字符串、数值、数组或者对象。</span><br><span class="line">        2. 也可以通过 ref=&#x27;refName&#x27; 在mounted中 使用 $on 的方式绑定并处理自定义事件</span><br><span class="line">        3. mounted中使用 this.$refs.refName.$on(&#x27;自定义事件&#x27;,function(参数)&#123; &#125;)的方式绑定并处理</span><br><span class="line">        4. ref结合mounted与$on的写法更灵活，比如延迟触发、axios后再处理事件</span><br><span class="line">        5. 在绑定的组件可以使用 this.$off() 解绑自定义事件. </span><br><span class="line">            this.$off(&#x27;eventName&#x27;)  解绑一个自定义事件</span><br><span class="line">            this.$off([&#x27;eventName1&#x27;,&#x27;eventName2&#x27;])  解绑多个自定义事件</span><br><span class="line">            this.$off()  解绑所有的自定义事件</span><br><span class="line">        6. 如果组件被销毁，那么绑定的自定义事件不再有效果。</span><br><span class="line">        7. 注意: mounted 中 $on的回调函数中,this是当前绑定自定事件的组件对象vc，而不是vue对象vm。 如果需要vm则需要将回调函数写为箭头函数</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;span&gt;学生组件的姓名是:&#123;&#123;stuName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;!--组件student 绑定自定义事件customEvent 事件处理方法getStuName --&gt;</span><br><span class="line">    &lt;Student v-on:customEvent=&quot;getStuName&quot; title=&quot;v-on方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;Student @customEvent=&quot;getStuName&quot; title=&quot;@ 方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;  title=&quot;ref emit方式绑定自定义事件&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        // 直接处理自定义事件</span><br><span class="line">        getStuName(param) &#123;</span><br><span class="line">            console.log(&#x27;param&#x27;, param);</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        // 通过 mounted+$refs+$on 的方式处理自定时间。方式更灵活。 例如延迟处理、axios后处理等等.</span><br><span class="line">        // 回调函数的this是绑定自定事件的组件即stu组件，无法获取到当前app组件的stuName，需要改为箭头函数或者使用注释行的代码</span><br><span class="line">        this.$refs.stu.$on(&#x27;customEvent&#x27;,(param)=&gt; &#123;</span><br><span class="line">            console.log(&#x27;this.stu.$on&#x27;, param);</span><br><span class="line">            this.stuName = param.name;</span><br><span class="line">        &#125;)</span><br><span class="line">        // this.$refs.stu.$on(&#x27;customEvent&#x27;,getStuName)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-evenly;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 07 章: vue自定义事件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="mounted" scheme="https://www.odinsam.com/tags/mounted/"/>
    
    <category term="emit" scheme="https://www.odinsam.com/tags/emit/"/>
    
    <category term="on" scheme="https://www.odinsam.com/tags/on/"/>
    
    <category term="off" scheme="https://www.odinsam.com/tags/off/"/>
    
    <category term="refs" scheme="https://www.odinsam.com/tags/refs/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 06. webStorage浏览器的本地存储</title>
    <link href="https://www.odinsam.com/articles/fef3.html"/>
    <id>https://www.odinsam.com/articles/fef3.html</id>
    <published>2022-10-19T07:53:00.000Z</published>
    <updated>2022-10-19T07:58:10.051Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 06 章: webStorage浏览器的本地存储</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="webstorage浏览器的本地存储"><a class="markdownIt-Anchor" href="#webstorage浏览器的本地存储"></a> webStorage浏览器的本地存储</h4><ol><li>浏览器通过 window.sessionStorage 和 window.localStorage 属性实现本地存储</li><li>相关api<br>xxxStorage.setItem(‘key’,‘value’) 存储数据<br>xxxStorage.getItem(‘key’) 读取数据<br>xxxStorage.removeItem(‘key’) 删除某个数据<br>xxxStorage.clear()  清空所有数据</li><li>sessionStorage 存储的内容会随着浏览器的关闭而消失.</li><li>localStorage 存储的内容需要手动调用api清除</li><li>xxxStorage.getItem(‘key’) 如果key不存在，则返回null</li><li>JSON.parse(null) 返回的依然是null</li></ol><figure class="highlight plaintext"><figcaption><span>Student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model.lazy=&quot;addStuName&quot; @keyup.enter=&quot;addStu&quot;&gt;&lt;br/&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;stu in stus&quot; :key=&quot;stu.id&quot;&gt;&#123;&#123;stu.stuName&#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;button @click=&quot;changeStuName&quot;&gt;修改第一个学生的姓名&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            addStuName: &#x27;&#x27;,</span><br><span class="line">            //从localStorage中获取数据 如果为null则返回空数组。确保用户打开浏览器时显示的是上次保存在localStorage中的数据</span><br><span class="line">            stus: JSON.parse(localStorage.getItem(&#x27;stu&#x27;)) || []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addStu() &#123;</span><br><span class="line">            const newStu = &#123; id: this.stus.length, stuName: this.addStuName &#125;;</span><br><span class="line">            this.stus.push(newStu);</span><br><span class="line">            this.addStuName=&#x27;&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        //修改第一个学生的姓名，此时需要开启深度监视，否则无法watch无法监视到stu内部的元素属性的修改，就无法触发监视事件（修改localStorage中的数据）</span><br><span class="line">        changeStuName() &#123;</span><br><span class="line">            this.stus[0].stuName = this.stus[0].stuName+&#x27;change&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">        stus: &#123;</span><br><span class="line">            //放弃watch的简写方式开启深度监视，确保当修改了stu数组内部元素的属性后依旧可以监视到数据改变并存储到localStorage中</span><br><span class="line">            deep: true,</span><br><span class="line">            handler(value) &#123;</span><br><span class="line">                localStorage.setItem(&#x27;stu&#x27;,JSON.stringify(value))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 06 章: webStorage浏览器的本地存储&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="localStorage" scheme="https://www.odinsam.com/tags/localStorage/"/>
    
    <category term="sessionStorage" scheme="https://www.odinsam.com/tags/sessionStorage/"/>
    
    <category term="本地存储" scheme="https://www.odinsam.com/tags/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    
    <category term="webStorage" scheme="https://www.odinsam.com/tags/webStorage/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 05. vue的style</title>
    <link href="https://www.odinsam.com/articles/4576.html"/>
    <id>https://www.odinsam.com/articles/4576.html</id>
    <published>2022-10-18T12:43:00.000Z</published>
    <updated>2022-10-18T12:45:55.536Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 05 章: vue的style</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="vue的style"><a class="markdownIt-Anchor" href="#vue的style"></a> vue的style</h4><ol><li>多个组件的style可能会出现class重名的情况，当class重名，后引入的组件样式会覆盖之前的同名样式</li><li>可以在组件的 style 标签中添加 scoped属性，让当前style仅作用于当前组件(app的style不加scoped)</li><li>style 标签还有lang属性，默认是css。若要修改less，需注意:需要添加 less-loader.</li><li>npm view webpack version 可以查看对应版本</li><li>vue2 webpack使用的4.46 less-load 8以后得版本是为了迎合webpack5 所以需要安装less-loader 7版本</li><li>安装 npm i less-loader@7</li></ol><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span class=&quot;namecls&quot;&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span class=&quot;lessname&quot;&gt;less 样式&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:400px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">    .lessname</span><br><span class="line">    &#123;</span><br><span class="line">        font-size:30px;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.namecls</span><br><span class="line">    &#123;</span><br><span class="line">        color:blue;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>school.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;schooldv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;School组件&lt;/h2&gt;</span><br><span class="line">        &lt;span class=&quot;namecls&quot;&gt;姓名：&#123;&#123;schoolName&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            schoolName:&#x27;vue学校&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;css&quot;&gt;</span><br><span class="line">.schooldv&#123;</span><br><span class="line">    background-color:cadetblue;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">.namecls</span><br><span class="line">&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 05 章: vue的style&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="style" scheme="https://www.odinsam.com/tags/style/"/>
    
    <category term="less" scheme="https://www.odinsam.com/tags/less/"/>
    
    <category term="scoped" scheme="https://www.odinsam.com/tags/scoped/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 04. plugins插件</title>
    <link href="https://www.odinsam.com/articles/ec79.html"/>
    <id>https://www.odinsam.com/articles/ec79.html</id>
    <published>2022-10-18T12:18:00.000Z</published>
    <updated>2022-10-18T13:06:35.109Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 04 章: plugins插件</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="plugins插件"><a class="markdownIt-Anchor" href="#plugins插件"></a> plugins插件</h4><ol><li>包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</li><li>插件可以给vue添加实例方法、实例属性</li><li>使用插件： 在创建Vue实例前 Vue.use(plugins, { value1: ‘value1’, value2: ‘value2’ });</li><li>插件也可以 添加全局过滤器、添加全局指令、添加全局混入</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight js"><figcaption><span>plugins</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    vue插件</span></span><br><span class="line"><span class="comment">    1. 包含install方法的对象，install的第一个参数是vue，第二个以后得参数是插件使用者传递的数据</span></span><br><span class="line"><span class="comment">    2. 插件可以给vue添加实例方法、实例属性</span></span><br><span class="line"><span class="comment">    3. 使用插件： 在创建Vue实例前 Vue.use(plugins, &#123; value1: &#x27;value1&#x27;, value2: &#x27;value2&#x27; &#125;);</span></span><br><span class="line"><span class="comment">    4. 插件也可以 添加全局过滤器、添加全局指令、添加全局混入</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="function"><span class="title">install</span>(<span class="params">Vue, options</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;install 插件&#x27;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;options&#x27;</span>, options);</span><br><span class="line">        <span class="comment">//添加实例方法、实例属性</span></span><br><span class="line">        Vue.prototype.pluginMethod = <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;invoke plugins myMethod&#x27;</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;myMethod param value&#x27;</span>, value);</span><br><span class="line">        &#125;;</span><br><span class="line">        Vue.prototype.pluginPrototype = <span class="string">&#x27;odinsam plugins&#x27;</span>;</span><br><span class="line">        <span class="comment">//添加全局过滤器</span></span><br><span class="line">        Vue.filter(<span class="string">&#x27;odinFilter&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&#x27;odinFilter 被调用&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> value + <span class="string">&#x27;-odinFilter 被调用&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//添加全局指令</span></span><br><span class="line">        Vue.directive(<span class="string">&#x27;big&#x27;</span>, &#123;</span><br><span class="line">            <span class="function"><span class="title">bind</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(</span><br><span class="line">                    <span class="string">&#x27;1次调用 - 当指令与元素绑定成功时调用，在内存，页面并没有元素&#x27;</span></span><br><span class="line">                );</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;binding&#x27;</span>, binding);</span><br><span class="line">                ele.innerText = <span class="string">&#x27;v-big指令显示&#x27;</span> + binding.value;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">inserted</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;1或n次调用 - 指令所在的元素被插入页面时调用&#x27;</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">update</span>(<span class="params">ele, binding</span>)</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&#x27;1或n次调用: 当指令所在模板被重新解析时&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//添加全局混入</span></span><br><span class="line">        Vue.mixin(&#123;</span><br><span class="line">            <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">pluginMixinValue</span>: <span class="string">&#x27;plugins mixin data&#x27;</span></span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> plugins <span class="keyword">from</span> <span class="string">&#x27;./plugins&#x27;</span>;</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//使用插件</span></span><br><span class="line">Vue.use(plugins, &#123; <span class="attr">value1</span>: <span class="string">&#x27;value1&#x27;</span>, <span class="attr">value2</span>: <span class="string">&#x27;value2&#x27;</span> &#125;);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span&gt;插件混入+插件过滤器:&#123;&#123;pluginMixinValue | odinFilter&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;span&gt;插件v-big指令:&lt;/span&gt;&lt;span v-big=&quot;value&quot;&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;invokeMyMethod&quot;&gt;调用插件中的myMethod方法&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            stuName: &#x27;odinsam&#x27;,</span><br><span class="line">            value:&#x27;组件value&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        invokeMyMethod() &#123;</span><br><span class="line">            this.pluginMethod(this.pluginPrototype);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 04 章: plugins插件&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="全局指令" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%8C%87%E4%BB%A4/"/>
    
    <category term="directive" scheme="https://www.odinsam.com/tags/directive/"/>
    
    <category term="filter" scheme="https://www.odinsam.com/tags/filter/"/>
    
    <category term="全局过滤器" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
    <category term="mixin" scheme="https://www.odinsam.com/tags/mixin/"/>
    
    <category term="全局混入" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5/"/>
    
    <category term="全局混合" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%90%88/"/>
    
    <category term="插件" scheme="https://www.odinsam.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="plugin" scheme="https://www.odinsam.com/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 03. mixins混入配置项</title>
    <link href="https://www.odinsam.com/articles/6426.html"/>
    <id>https://www.odinsam.com/articles/6426.html</id>
    <published>2022-10-18T10:00:00.000Z</published>
    <updated>2022-10-18T12:47:38.594Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: props配置项</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="mixins混入配置项"><a class="markdownIt-Anchor" href="#mixins混入配置项"></a> mixins混入配置项</h4><ol><li>可以吧多个组件公用的配置提取成一个混入对象</li><li>定义见 mixin.js</li><li>使用分为局部混合和全局混合。</li><li>局部混合：引入混合对象 import {mixin,mixinData} from ‘…/mixin’;在vueComponent配置项中 mixins:[mixin,mixinData]</li><li>全局混合：在main.js中 引入 import {mixin,mixinData} from ‘…/mixin’; 使用 Vue.mixin({ mixin, mixinData });混合</li><li>当混入配置与组件配置冲突时，如果是data、methods等，以组件自身数据、方法为主。但如果是有冲突的生命周期钩子，则都会运行。且现执行混合中的钩子函数后执行组件自身的钩子函数</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; mixin, mixinData &#125; <span class="keyword">from</span> <span class="string">&#x27;./mixin&#x27;</span>;</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//全局混入</span></span><br><span class="line">Vue.mixin(&#123; mixin, mixinData &#125;);</span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>mixin.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin = &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">showName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">            alert(<span class="built_in">this</span>.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name + <span class="string">&#x27;组件挂载了&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixinData = &#123;</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">value</span>: <span class="string">&#x27;mixin数据&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>school.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;mixindata与组件data冲突时:&#123;&#123;value&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;学校名：&#123;&#123;schoolName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;showName&quot;&gt;showName&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;mixin,mixinData&#125; from &#x27;../mixin&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            value:&#x27;组件data&#x27;,</span><br><span class="line">            name:&#x27;School组件&#x27;,</span><br><span class="line">            schoolName:&#x27;vue学院&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mixins:[mixin,mixinData]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">        &lt;button @click=&quot;showName&quot;&gt;showName&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;mixin&#125; from &#x27;../mixin.js&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            name:&#x27;Student组件&#x27;,</span><br><span class="line">            stuName:&#x27;odinsam&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    mixins: [mixin],</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        console.log(&#x27;student自身的mounted&#x27;);</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:500px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: props配置项&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="mixin" scheme="https://www.odinsam.com/tags/mixin/"/>
    
    <category term="混入" scheme="https://www.odinsam.com/tags/%E6%B7%B7%E5%85%A5/"/>
    
    <category term="混合" scheme="https://www.odinsam.com/tags/%E6%B7%B7%E5%90%88/"/>
    
    <category term="全局混入" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5/"/>
    
    <category term="全局混合" scheme="https://www.odinsam.com/tags/%E5%85%A8%E5%B1%80%E6%B7%B7%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 02. props配置项</title>
    <link href="https://www.odinsam.com/articles/40e6.html"/>
    <id>https://www.odinsam.com/articles/40e6.html</id>
    <published>2022-10-18T09:28:00.000Z</published>
    <updated>2022-10-19T14:38:04.227Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: props配置项</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="props配置项"><a class="markdownIt-Anchor" href="#props配置项"></a> props配置项</h4><ol><li>让组件接收外部传过来的数据 &lt;Student stuName=“odinsam” :age=“10”&gt;&lt;/Student&gt;</li><li>如果使用props传递数组、对象、方法等数据时，应该是 &lt;Student :getStudentName=“getStudentName”&gt;&lt;/Student&gt;通过props传递函数getStudentName</li><li>接收数据</li></ol><figure class="highlight js"><figcaption><span>简单接收</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">props: [<span class="string">&#x27;stuName&#x27;</span>, <span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>接收的同时限制数据类型</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    <span class="attr">stuName</span>: <span class="built_in">String</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">Number</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>接收的同时 限制数据类型、限制必要性、指定默认值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">props: &#123;</span><br><span class="line">    <span class="attr">stuName</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">age</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">        <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">className</span>: &#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="built_in">String</span>,</span><br><span class="line">        <span class="attr">default</span>:<span class="string">&quot;1班&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>props是只读的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</li></ol><h4 id="示例代码"><a class="markdownIt-Anchor" href="#示例代码"></a> 示例代码</h4><figure class="highlight plaintext"><figcaption><span>app.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;dvapp&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        props配置项</span><br><span class="line">        1. 让组件接收外部传过来的数据 &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        2. 接收数据</span><br><span class="line">            简单接收 props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">            接收的同时限制数据类型</span><br><span class="line">            props: &#123;</span><br><span class="line">                stuName: String,</span><br><span class="line">                age: Number,</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            接收的同时 限制数据类型、限制必要性、指定默认值</span><br><span class="line">            props: &#123;</span><br><span class="line">                stuName: &#123;</span><br><span class="line">                    type: String,</span><br><span class="line">                    required:true,</span><br><span class="line">                &#125;,</span><br><span class="line">                age: &#123;</span><br><span class="line">                    type: Number,</span><br><span class="line">                    required:true,</span><br><span class="line">                &#125;,</span><br><span class="line">                className: &#123;</span><br><span class="line">                    type: String,</span><br><span class="line">                    default:&quot;1班&quot;,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        3. props是制度的，Vue底层会检测对props的修改。如果进行了修改，会发出警告。如果业务需要修改，name复制props内容到data中，修改data中的数据</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;Student stuName=&quot;odinsam&quot; :age=&quot;10&quot;&gt;&lt;/Student&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.dvapp</span><br><span class="line">&#123;</span><br><span class="line">    background-color: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>student.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;studv&quot;&gt;</span><br><span class="line">        &lt;h2&gt;Student组件&lt;/h2&gt;</span><br><span class="line">        &lt;span&gt;姓名：&#123;&#123;stuName&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;span&gt;年龄：&#123;&#123;myAge&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;span&gt;班级：&#123;&#123;className&#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">        &lt;button @click=&quot;changeAge&quot;&gt;修改姓名&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            myAge:this.age</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        changeAge() &#123;</span><br><span class="line">            this.myAge++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 简单接收</span><br><span class="line">    // props: [&#x27;stuName&#x27;, &#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">    // 接收的同时限制数据类型</span><br><span class="line">    /*</span><br><span class="line">    props: &#123;</span><br><span class="line">        stuName: String,</span><br><span class="line">        age: Number,</span><br><span class="line">    &#125;</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    props: &#123;</span><br><span class="line">        stuName: &#123;</span><br><span class="line">            type: String,</span><br><span class="line">            required:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        age: &#123;</span><br><span class="line">            type: Number,</span><br><span class="line">            required:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        className: &#123;</span><br><span class="line">            type: String,</span><br><span class="line">            default:&quot;1班&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;css&quot;&gt;</span><br><span class="line">.studv&#123;</span><br><span class="line">    background-color:bisque;</span><br><span class="line">    width:200px;</span><br><span class="line">    padding:50px;</span><br><span class="line">    margin-left:50px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: props配置项&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="props" scheme="https://www.odinsam.com/tags/props/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶学习</title>
    <link href="https://www.odinsam.com/articles/e255.html"/>
    <id>https://www.odinsam.com/articles/e255.html</id>
    <published>2022-10-18T08:57:00.000Z</published>
    <updated>2022-10-20T00:53:26.358Z</updated>
    
    <content type="html"><![CDATA[<p>Vue2.0进阶学习目录. <a href="da3d.html">vue2.0 基础学习目录</a></p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h2 id="目录"><a class="markdownIt-Anchor" href="#目录"></a> 目录</h2><h4 id="01-ref属性"><a class="markdownIt-Anchor" href="#01-ref属性"></a> <a href="821d.html">[01] ref属性</a></h4><h4 id="02-props配置项"><a class="markdownIt-Anchor" href="#02-props配置项"></a> <a href="40e6.html">[02] props配置项</a></h4><h4 id="03-mixin混入配置项"><a class="markdownIt-Anchor" href="#03-mixin混入配置项"></a> <a href="6426.html">[03] mixin混入配置项</a></h4><h4 id="04-plugins插件"><a class="markdownIt-Anchor" href="#04-plugins插件"></a> <a href="ec79.html">[04] plugins插件</a></h4><h4 id="05-vue的style"><a class="markdownIt-Anchor" href="#05-vue的style"></a> <a href="4576.html">[05] vue的style</a></h4><h4 id="06-webstorage浏览器的本地存储"><a class="markdownIt-Anchor" href="#06-webstorage浏览器的本地存储"></a> <a href="fef3.html">[06] webStorage浏览器的本地存储</a></h4><h4 id="07-vue自定义事件"><a class="markdownIt-Anchor" href="#07-vue自定义事件"></a> <a href="e1f2.html">[07] vue自定义事件</a></h4><h4 id="08-全局事件总线"><a class="markdownIt-Anchor" href="#08-全局事件总线"></a> <a href="10d9.html">[08] 全局事件总线</a></h4><h4 id="09-消息订阅与发布"><a class="markdownIt-Anchor" href="#09-消息订阅与发布"></a> <a href="ac9b.html">[09] 消息订阅与发布</a></h4><h4 id="10-nexttick与props传递函数"><a class="markdownIt-Anchor" href="#10-nexttick与props传递函数"></a> <a href="fc6a.html">[10] nextTick与props传递函数</a></h4><h4 id="11-动画效果"><a class="markdownIt-Anchor" href="#11-动画效果"></a> <a href="f2de.html">[11] 动画效果</a></h4><h4 id="12-配置代理"><a class="markdownIt-Anchor" href="#12-配置代理"></a> <a href="551e.html">[12] 配置代理</a></h4><h4 id="13-slot插槽"><a class="markdownIt-Anchor" href="#13-slot插槽"></a> <a href="d7ab.html">[13] slot插槽</a></h4><h4 id="14-vuex"><a class="markdownIt-Anchor" href="#14-vuex"></a> <a href="97b5.html">[14] vuex</a></h4><h4 id="15-vue-router路"><a class="markdownIt-Anchor" href="#15-vue-router路"></a> <a href="8447.html">[15] vue-router路</a></h4>]]></content>
    
    
    <summary type="html">&lt;p&gt;Vue2.0进阶学习目录. &lt;a href=&quot;da3d.html&quot;&gt;vue2.0 基础学习目录&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue2.0进阶 - 01. ref属性</title>
    <link href="https://www.odinsam.com/articles/821d.html"/>
    <id>https://www.odinsam.com/articles/821d.html</id>
    <published>2022-10-18T08:55:00.000Z</published>
    <updated>2022-10-18T12:46:37.434Z</updated>
    
    <content type="html"><![CDATA[<p><a href="e255.html">【Vue2.0】进阶学习系列</a> Vue2.0进阶第 01 章: ref属性</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><h4 id="ref属性"><a class="markdownIt-Anchor" href="#ref属性"></a> ref属性</h4><ol><li>被用来给元素或者子组件注册引用信息(id的替代)</li><li>应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</li><li>使用方法 &lt;h1 ref=“title”&gt;…&lt;/h1&gt;  或者 &lt;Student ref=“stu”&gt;&lt;/Student&gt;</li><li>获取 this.refs.title 真实dom对象 或者 this.refs.stu stu组件对象实例</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">        ref属性</span><br><span class="line">        1. 被用来给元素或者子组件注册引用信息(id的替代)</span><br><span class="line">        2. 应用在html标签上获取到的是真实的dom元素，应用在组件标签上获取到的是组件对象实例vc</span><br><span class="line">        3. 使用方法 &lt;h1 ref=&quot;title&quot;&gt;.....&lt;/h1&gt;  或者 &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">        4. 获取 this.$refs.title 真实dom对象 或者 this.$refs.stu stu组件对象实例</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;h2 ref=&quot;title&quot;&gt;app组件&lt;/h2&gt;</span><br><span class="line">    &lt;Student ref=&quot;stu&quot;&gt;&lt;/Student&gt;</span><br><span class="line">    &lt;button @click=&quot;getDomClick&quot;&gt;使用ref获取dom元素&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Student from &#x27;./components/Student.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;App&#x27;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Student</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getDomClick() &#123;</span><br><span class="line">            console.log(&#x27;function getDomClick&#x27;);</span><br><span class="line">            console.log(this.$refs.title);  //获取到真实的dom元素</span><br><span class="line">            console.log(this.$refs.stu);    // student组件对象 vc</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;e255.html&quot;&gt;【Vue2.0】进阶学习系列&lt;/a&gt; Vue2.0进阶第 01 章: ref属性&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="ref" scheme="https://www.odinsam.com/tags/ref/"/>
    
  </entry>
  
  <entry>
    <title>macos 小指令</title>
    <link href="https://www.odinsam.com/articles/ade6.html"/>
    <id>https://www.odinsam.com/articles/ade6.html</id>
    <published>2022-10-18T07:16:00.000Z</published>
    <updated>2022-10-18T07:17:25.546Z</updated>
    
    <content type="html"><![CDATA[<p>macos 中的一些小指令</p><span id="more"></span><h4 id="生成markdownde的目录树"><a class="markdownIt-Anchor" href="#生成markdownde的目录树"></a> 生成markdownde的目录树</h4><p>find . -print | sed -e ‘s;[^/]*/;|<strong><strong>;g;s;</strong></strong>|; |;g’</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;macos 中的一些小指令&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="https://www.odinsam.com/categories/macos/"/>
    
    <category term="杂项" scheme="https://www.odinsam.com/categories/macos/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue2.0 - 19. Vue脚手架</title>
    <link href="https://www.odinsam.com/articles/d49a.html"/>
    <id>https://www.odinsam.com/articles/d49a.html</id>
    <published>2022-10-18T07:03:00.000Z</published>
    <updated>2022-10-18T13:03:48.874Z</updated>
    
    <content type="html"><![CDATA[<p><a href="da3d.html">【Vue2.0】学习系列</a> 第 19 章: Vue脚手架</p><span id="more"></span><p>完整代码可以在 <a href="https://github.com/odinsam/learn-vue2.0">GitHub</a> 。</p><ol><li>全局安装 npm install -g @vue/cli</li><li><font color="red">切换到需要创建项目的目录</font>，然后创建项目 vue create 项目名称</li><li>进入项目目录，启动项目 npm serve</li><li>vue.js 与 vue.runtime.mini.js 的区别<ol><li>vue.js 是完整版的 vue，包含核心功能+模板解析器</li><li>vue.runtime.mini.js 是运行时版本，只包含核心功能，没有模板解析器</li></ol></li><li>vue.runtime.mini.js 因为没有模板解析器，所以不能使用 template 配置项，需要 render 函数接收到的 createElement 函数去指定具体内容</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="6"><li>使用 vue inspect &gt; output.js 可以查看到vue脚手架的默认配置</li><li>使用 vue.config.js 可以对脚手架进行个性化定制。详情 <a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;da3d.html&quot;&gt;【Vue2.0】学习系列&lt;/a&gt; 第 19 章: Vue脚手架&lt;/p&gt;</summary>
    
    
    
    <category term="vue" scheme="https://www.odinsam.com/categories/vue/"/>
    
    <category term="前端" scheme="https://www.odinsam.com/categories/vue/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vue" scheme="https://www.odinsam.com/tags/vue/"/>
    
    <category term="cli" scheme="https://www.odinsam.com/tags/cli/"/>
    
  </entry>
  
</feed>
